date:2017-09-14 10:30:08	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==>  Preparing: SELECT boarding_class_cd, boarding_class_name, extra_charge FROM boarding_class 
date:2017-09-14 10:30:08	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==> Parameters: 
date:2017-09-14 10:30:09	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
1. SELECT
        boarding_class_cd,
        boarding_class_name,
        extra_charge
    FROM
        boarding_class {executed in 275 msec}
date:2017-09-14 10:30:09	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:<==      Total: 2
date:2017-09-14 10:30:09	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==>  Preparing: SELECT fare_type_cd, fare_type_name, discount_rate, rsrv_available_start_day_num, rsrv_available_end_day_num, passenger_min_num FROM fare_type 
date:2017-09-14 10:30:09	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 10:30:09	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
2. SELECT
        fare_type_cd,
        fare_type_name,
        discount_rate,
        rsrv_available_start_day_num,
        rsrv_available_end_day_num,
        passenger_min_num
    FROM
        fare_type {executed in 72 msec}
date:2017-09-14 10:30:09	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:<==      Total: 10
date:2017-09-14 10:30:09	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==>  Preparing: SELECT fm.flight_name, fm.departure_time, fm.arrival_time, fm.craft_type, r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM flight_master fm, route r, airport a_dep, airport a_arr WHERE fm.route_no = r.route_no AND r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 10:30:09	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==> Parameters: 
date:2017-09-14 10:30:09	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
3. SELECT
        fm.flight_name,
        fm.departure_time,
        fm.arrival_time,
        fm.craft_type,
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        flight_master fm,
        route r,
        airport a_dep,
        airport a_arr
    WHERE 
        fm.route_no = r.route_no
    AND
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 511 msec}
date:2017-09-14 10:30:09	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:<==      Total: 126
date:2017-09-14 10:30:09	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==>  Preparing: SELECT peak_time_cd, peak_start_date, peak_end_date, multiplication_ratio FROM peak_time 
date:2017-09-14 10:30:09	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 10:30:10	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
4. SELECT
        peak_time_cd,
        peak_start_date,
        peak_end_date,
        multiplication_ratio
    FROM
        peak_time {executed in 35 msec}
date:2017-09-14 10:30:10	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:<==      Total: 16
date:2017-09-14 10:30:10	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==>  Preparing: SELECT r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM route r, airport a_dep, airport a_arr WHERE r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 10:30:10	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==> Parameters: 
date:2017-09-14 10:30:10	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
5. SELECT
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        route r,
        airport a_dep,
        airport a_arr
    WHERE
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 2 msec}
date:2017-09-14 10:30:10	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:<==      Total: 20
date:2017-09-14 10:30:10	thread:main	user:	X-Track:	level:WARN 	logger:org.dozer.config.GlobalSettings                 	message:Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
date:2017-09-14 10:30:11	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member_login {executed in 56 msec}
date:2017-09-14 10:30:11	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member {executed in 113 msec}
date:2017-09-14 10:30:11	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 10:30:11	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 80 msec}
date:2017-09-14 10:30:11	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 10:30:11	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 3 msec}
date:2017-09-14 10:30:11	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 0 msec}
date:2017-09-14 10:30:11	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 10:30:11	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==>  Preparing: UPDATE member SET kanji_family_name = ?, kanji_given_name = ?, kana_family_name = ?, kana_given_name = ?, birthday = ?, gender = ?, tel = ?, zip_code = ?, address = ?, mail = ?, credit_no = ?, credit_type_cd = ?, credit_term = ? WHERE customer_no = ? 
date:2017-09-14 10:30:11	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==> Parameters: 電信柱(String), 花子(String), デンデン(String), ハナコ(String), 1979-01-25 00:00:00.0(Timestamp), F(String), 111-1111-1111(String), 1111111(String), 東京都港区港南Ｘ－Ｘ－Ｘ(String), xxxxxx@ntt.co.jp(String), 1111111111111111(String), VIS(String), 01/20(String), 0000000001(String)
date:2017-09-14 10:30:11	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
6. UPDATE member SET
        kanji_family_name = '電信柱',
        kanji_given_name = '花子',
        kana_family_name = 'デンデン',
        kana_given_name = 'ハナコ',
        birthday = '01/25/1979 00:00:00.000',
        gender = 'F',
        tel = '111-1111-1111',
        zip_code = '1111111',
        address = '東京都港区港南Ｘ－Ｘ－Ｘ',
        mail = 'xxxxxx@ntt.co.jp',
        credit_no = '1111111111111111',
        credit_type_cd = 'VIS',
        credit_term = '01/20'
    WHERE
        customer_no = '0000000001' {executed in 0 msec}
date:2017-09-14 10:30:11	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:<==    Updates: 1
date:2017-09-14 10:30:11	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 1 msec}
date:2017-09-14 10:30:11	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 10:30:11	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.AbstractResultSetTable.<init>(AbstractResultSetTable.java:110)
6. select customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term from member order by customer_no {executed in 5 msec}
date:2017-09-14 10:30:11	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.AbstractResultSetTable.<init>(AbstractResultSetTable.java:110)
6. select customer_no, password, last_password, login_date_time, login_flg from member_login order by customer_no {executed in 1 msec}
date:2017-09-14 10:47:31	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==>  Preparing: SELECT boarding_class_cd, boarding_class_name, extra_charge FROM boarding_class 
date:2017-09-14 10:47:31	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==> Parameters: 
date:2017-09-14 10:47:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
1. SELECT
        boarding_class_cd,
        boarding_class_name,
        extra_charge
    FROM
        boarding_class {executed in 15 msec}
date:2017-09-14 10:47:31	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:<==      Total: 2
date:2017-09-14 10:47:31	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==>  Preparing: SELECT fare_type_cd, fare_type_name, discount_rate, rsrv_available_start_day_num, rsrv_available_end_day_num, passenger_min_num FROM fare_type 
date:2017-09-14 10:47:31	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 10:47:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
2. SELECT
        fare_type_cd,
        fare_type_name,
        discount_rate,
        rsrv_available_start_day_num,
        rsrv_available_end_day_num,
        passenger_min_num
    FROM
        fare_type {executed in 1 msec}
date:2017-09-14 10:47:31	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:<==      Total: 10
date:2017-09-14 10:47:31	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==>  Preparing: SELECT fm.flight_name, fm.departure_time, fm.arrival_time, fm.craft_type, r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM flight_master fm, route r, airport a_dep, airport a_arr WHERE fm.route_no = r.route_no AND r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 10:47:31	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==> Parameters: 
date:2017-09-14 10:47:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
3. SELECT
        fm.flight_name,
        fm.departure_time,
        fm.arrival_time,
        fm.craft_type,
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        flight_master fm,
        route r,
        airport a_dep,
        airport a_arr
    WHERE 
        fm.route_no = r.route_no
    AND
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 4 msec}
date:2017-09-14 10:47:31	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:<==      Total: 126
date:2017-09-14 10:47:31	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==>  Preparing: SELECT peak_time_cd, peak_start_date, peak_end_date, multiplication_ratio FROM peak_time 
date:2017-09-14 10:47:31	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 10:47:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
4. SELECT
        peak_time_cd,
        peak_start_date,
        peak_end_date,
        multiplication_ratio
    FROM
        peak_time {executed in 1 msec}
date:2017-09-14 10:47:31	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:<==      Total: 16
date:2017-09-14 10:47:31	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==>  Preparing: SELECT r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM route r, airport a_dep, airport a_arr WHERE r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 10:47:31	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==> Parameters: 
date:2017-09-14 10:47:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
5. SELECT
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        route r,
        airport a_dep,
        airport a_arr
    WHERE
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 1 msec}
date:2017-09-14 10:47:31	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:<==      Total: 20
date:2017-09-14 10:47:32	thread:main	user:	X-Track:	level:WARN 	logger:org.dozer.config.GlobalSettings                 	message:Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
date:2017-09-14 10:47:32	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member_login {executed in 1 msec}
date:2017-09-14 10:47:32	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member {executed in 8 msec}
date:2017-09-14 10:47:32	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 10:47:32	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 3 msec}
date:2017-09-14 10:47:32	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 10:47:32	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 1 msec}
date:2017-09-14 10:47:32	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 1 msec}
date:2017-09-14 10:47:32	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 0 msec}
date:2017-09-14 10:47:32	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==>  Preparing: UPDATE member SET kanji_family_name = ?, kanji_given_name = ?, kana_family_name = ?, kana_given_name = ?, birthday = ?, gender = ?, tel = ?, zip_code = ?, address = ?, mail = ?, credit_no = ?, credit_type_cd = ?, credit_term = ? WHERE customer_no = ? 
date:2017-09-14 10:47:32	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==> Parameters: 電信柱(String), 花子(String), デンデン(String), ハナコ(String), 1979-01-25 00:00:00.0(Timestamp), F(String), 111-1111-1111(String), 1111111(String), 東京都港区港南Ｘ－Ｘ－Ｘ(String), xxxxxx@ntt.co.jp(String), 1111111111111111(String), VIS(String), 01/20(String), 0000000001(String)
date:2017-09-14 10:47:32	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
6. UPDATE member SET
        kanji_family_name = '電信柱',
        kanji_given_name = '花子',
        kana_family_name = 'デンデン',
        kana_given_name = 'ハナコ',
        birthday = '01/25/1979 00:00:00.000',
        gender = 'F',
        tel = '111-1111-1111',
        zip_code = '1111111',
        address = '東京都港区港南Ｘ－Ｘ－Ｘ',
        mail = 'xxxxxx@ntt.co.jp',
        credit_no = '1111111111111111',
        credit_type_cd = 'VIS',
        credit_term = '01/20'
    WHERE
        customer_no = '0000000001' {executed in 1 msec}
date:2017-09-14 10:47:32	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:<==    Updates: 1
date:2017-09-14 10:47:32	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 0 msec}
date:2017-09-14 10:47:32	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 10:47:32	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 0 msec}
date:2017-09-14 10:47:32	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 10:47:32	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==>  Preparing: UPDATE member SET kanji_family_name = ?, kanji_given_name = ?, kana_family_name = ?, kana_given_name = ?, birthday = ?, gender = ?, tel = ?, zip_code = ?, address = ?, mail = ?, credit_no = ?, credit_type_cd = ?, credit_term = ? WHERE customer_no = ? 
date:2017-09-14 10:47:32	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==> Parameters: 電信柱(String), 花子(String), デンデン(String), ハナコ(String), 1979-01-25 00:00:00.0(Timestamp), F(String), 111-1111-1111(String), 1111111(String), 東京都港区港南Ｘ－Ｘ－Ｘ(String), xxxxxx@ntt.co.jp(String), 1111111111111111(String), VIS(String), 01/20(String), 0000000001(String)
date:2017-09-14 10:47:32	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
6. UPDATE member SET
        kanji_family_name = '電信柱',
        kanji_given_name = '花子',
        kana_family_name = 'デンデン',
        kana_given_name = 'ハナコ',
        birthday = '01/25/1979 00:00:00.000',
        gender = 'F',
        tel = '111-1111-1111',
        zip_code = '1111111',
        address = '東京都港区港南Ｘ－Ｘ－Ｘ',
        mail = 'xxxxxx@ntt.co.jp',
        credit_no = '1111111111111111',
        credit_type_cd = 'VIS',
        credit_term = '01/20'
    WHERE
        customer_no = '0000000001' {executed in 3 msec}
date:2017-09-14 10:47:32	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:<==    Updates: 1
date:2017-09-14 10:47:44	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==>  Preparing: SELECT boarding_class_cd, boarding_class_name, extra_charge FROM boarding_class 
date:2017-09-14 10:47:44	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==> Parameters: 
date:2017-09-14 10:47:44	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
1. SELECT
        boarding_class_cd,
        boarding_class_name,
        extra_charge
    FROM
        boarding_class {executed in 19 msec}
date:2017-09-14 10:47:44	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:<==      Total: 2
date:2017-09-14 10:47:44	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==>  Preparing: SELECT fare_type_cd, fare_type_name, discount_rate, rsrv_available_start_day_num, rsrv_available_end_day_num, passenger_min_num FROM fare_type 
date:2017-09-14 10:47:44	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 10:47:44	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
2. SELECT
        fare_type_cd,
        fare_type_name,
        discount_rate,
        rsrv_available_start_day_num,
        rsrv_available_end_day_num,
        passenger_min_num
    FROM
        fare_type {executed in 2 msec}
date:2017-09-14 10:47:44	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:<==      Total: 10
date:2017-09-14 10:47:44	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==>  Preparing: SELECT fm.flight_name, fm.departure_time, fm.arrival_time, fm.craft_type, r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM flight_master fm, route r, airport a_dep, airport a_arr WHERE fm.route_no = r.route_no AND r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 10:47:44	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==> Parameters: 
date:2017-09-14 10:47:44	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
3. SELECT
        fm.flight_name,
        fm.departure_time,
        fm.arrival_time,
        fm.craft_type,
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        flight_master fm,
        route r,
        airport a_dep,
        airport a_arr
    WHERE 
        fm.route_no = r.route_no
    AND
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 6 msec}
date:2017-09-14 10:47:44	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:<==      Total: 126
date:2017-09-14 10:47:44	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==>  Preparing: SELECT peak_time_cd, peak_start_date, peak_end_date, multiplication_ratio FROM peak_time 
date:2017-09-14 10:47:44	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 10:47:44	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
4. SELECT
        peak_time_cd,
        peak_start_date,
        peak_end_date,
        multiplication_ratio
    FROM
        peak_time {executed in 2 msec}
date:2017-09-14 10:47:44	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:<==      Total: 16
date:2017-09-14 10:47:44	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==>  Preparing: SELECT r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM route r, airport a_dep, airport a_arr WHERE r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 10:47:44	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==> Parameters: 
date:2017-09-14 10:47:44	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
5. SELECT
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        route r,
        airport a_dep,
        airport a_arr
    WHERE
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 1 msec}
date:2017-09-14 10:47:44	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:<==      Total: 20
date:2017-09-14 10:47:45	thread:main	user:	X-Track:	level:WARN 	logger:org.dozer.config.GlobalSettings                 	message:Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
date:2017-09-14 10:47:45	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member_login {executed in 1 msec}
date:2017-09-14 10:47:45	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member {executed in 7 msec}
date:2017-09-14 10:47:45	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 10:47:45	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 3 msec}
date:2017-09-14 10:47:45	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 10:47:45	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 1 msec}
date:2017-09-14 10:47:45	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 1 msec}
date:2017-09-14 10:47:45	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 0 msec}
date:2017-09-14 10:47:45	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==>  Preparing: UPDATE member SET kanji_family_name = ?, kanji_given_name = ?, kana_family_name = ?, kana_given_name = ?, birthday = ?, gender = ?, tel = ?, zip_code = ?, address = ?, mail = ?, credit_no = ?, credit_type_cd = ?, credit_term = ? WHERE customer_no = ? 
date:2017-09-14 10:47:45	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==> Parameters: 電信柱(String), 花子(String), デンデン(String), ハナコ(String), 1979-01-25 00:00:00.0(Timestamp), F(String), 111-1111-1111(String), 1111111(String), 東京都港区港南Ｘ－Ｘ－Ｘ(String), xxxxxx@ntt.co.jp(String), 1111111111111111(String), VIS(String), 01/20(String), 0000000001(String)
date:2017-09-14 10:47:45	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
6. UPDATE member SET
        kanji_family_name = '電信柱',
        kanji_given_name = '花子',
        kana_family_name = 'デンデン',
        kana_given_name = 'ハナコ',
        birthday = '01/25/1979 00:00:00.000',
        gender = 'F',
        tel = '111-1111-1111',
        zip_code = '1111111',
        address = '東京都港区港南Ｘ－Ｘ－Ｘ',
        mail = 'xxxxxx@ntt.co.jp',
        credit_no = '1111111111111111',
        credit_type_cd = 'VIS',
        credit_term = '01/20'
    WHERE
        customer_no = '0000000001' {executed in 1 msec}
date:2017-09-14 10:47:45	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:<==    Updates: 1
date:2017-09-14 10:47:45	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 1 msec}
date:2017-09-14 10:47:45	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 10:47:45	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000002' {executed in 1 msec}
date:2017-09-14 10:49:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==>  Preparing: SELECT boarding_class_cd, boarding_class_name, extra_charge FROM boarding_class 
date:2017-09-14 10:49:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==> Parameters: 
date:2017-09-14 10:49:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
1. SELECT
        boarding_class_cd,
        boarding_class_name,
        extra_charge
    FROM
        boarding_class {executed in 20 msec}
date:2017-09-14 10:49:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:<==      Total: 2
date:2017-09-14 10:49:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==>  Preparing: SELECT fare_type_cd, fare_type_name, discount_rate, rsrv_available_start_day_num, rsrv_available_end_day_num, passenger_min_num FROM fare_type 
date:2017-09-14 10:49:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 10:49:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
2. SELECT
        fare_type_cd,
        fare_type_name,
        discount_rate,
        rsrv_available_start_day_num,
        rsrv_available_end_day_num,
        passenger_min_num
    FROM
        fare_type {executed in 2 msec}
date:2017-09-14 10:49:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:<==      Total: 10
date:2017-09-14 10:49:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==>  Preparing: SELECT fm.flight_name, fm.departure_time, fm.arrival_time, fm.craft_type, r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM flight_master fm, route r, airport a_dep, airport a_arr WHERE fm.route_no = r.route_no AND r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 10:49:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==> Parameters: 
date:2017-09-14 10:49:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
3. SELECT
        fm.flight_name,
        fm.departure_time,
        fm.arrival_time,
        fm.craft_type,
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        flight_master fm,
        route r,
        airport a_dep,
        airport a_arr
    WHERE 
        fm.route_no = r.route_no
    AND
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 4 msec}
date:2017-09-14 10:49:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:<==      Total: 126
date:2017-09-14 10:49:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==>  Preparing: SELECT peak_time_cd, peak_start_date, peak_end_date, multiplication_ratio FROM peak_time 
date:2017-09-14 10:49:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 10:49:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
4. SELECT
        peak_time_cd,
        peak_start_date,
        peak_end_date,
        multiplication_ratio
    FROM
        peak_time {executed in 2 msec}
date:2017-09-14 10:49:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:<==      Total: 16
date:2017-09-14 10:49:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==>  Preparing: SELECT r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM route r, airport a_dep, airport a_arr WHERE r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 10:49:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==> Parameters: 
date:2017-09-14 10:49:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
5. SELECT
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        route r,
        airport a_dep,
        airport a_arr
    WHERE
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 1 msec}
date:2017-09-14 10:49:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:<==      Total: 20
date:2017-09-14 10:49:02	thread:main	user:	X-Track:	level:WARN 	logger:org.dozer.config.GlobalSettings                 	message:Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
date:2017-09-14 10:49:03	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member_login {executed in 1 msec}
date:2017-09-14 10:49:03	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member {executed in 5 msec}
date:2017-09-14 10:49:03	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 10:49:03	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 3 msec}
date:2017-09-14 10:49:03	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 10:49:03	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 1 msec}
date:2017-09-14 10:49:03	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 1 msec}
date:2017-09-14 10:49:03	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 0 msec}
date:2017-09-14 10:49:03	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==>  Preparing: UPDATE member SET kanji_family_name = ?, kanji_given_name = ?, kana_family_name = ?, kana_given_name = ?, birthday = ?, gender = ?, tel = ?, zip_code = ?, address = ?, mail = ?, credit_no = ?, credit_type_cd = ?, credit_term = ? WHERE customer_no = ? 
date:2017-09-14 10:49:03	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==> Parameters: 電信柱(String), 花子(String), デンデン(String), ハナコ(String), 1979-01-25 00:00:00.0(Timestamp), F(String), 111-1111-1111(String), 1111111(String), 東京都港区港南Ｘ－Ｘ－Ｘ(String), xxxxxx@ntt.co.jp(String), 1111111111111111(String), VIS(String), 01/20(String), 0000000001(String)
date:2017-09-14 10:49:03	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
6. UPDATE member SET
        kanji_family_name = '電信柱',
        kanji_given_name = '花子',
        kana_family_name = 'デンデン',
        kana_given_name = 'ハナコ',
        birthday = '01/25/1979 00:00:00.000',
        gender = 'F',
        tel = '111-1111-1111',
        zip_code = '1111111',
        address = '東京都港区港南Ｘ－Ｘ－Ｘ',
        mail = 'xxxxxx@ntt.co.jp',
        credit_no = '1111111111111111',
        credit_type_cd = 'VIS',
        credit_term = '01/20'
    WHERE
        customer_no = '0000000001' {executed in 1 msec}
date:2017-09-14 10:49:03	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:<==    Updates: 1
date:2017-09-14 10:49:03	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 0 msec}
date:2017-09-14 10:49:03	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 10:49:03	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000002' {executed in 0 msec}
date:2017-09-14 14:10:47	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==>  Preparing: SELECT boarding_class_cd, boarding_class_name, extra_charge FROM boarding_class 
date:2017-09-14 14:10:47	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==> Parameters: 
date:2017-09-14 14:10:47	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
1. SELECT
        boarding_class_cd,
        boarding_class_name,
        extra_charge
    FROM
        boarding_class {executed in 22 msec}
date:2017-09-14 14:10:47	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:<==      Total: 2
date:2017-09-14 14:10:47	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==>  Preparing: SELECT fare_type_cd, fare_type_name, discount_rate, rsrv_available_start_day_num, rsrv_available_end_day_num, passenger_min_num FROM fare_type 
date:2017-09-14 14:10:47	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 14:10:47	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
2. SELECT
        fare_type_cd,
        fare_type_name,
        discount_rate,
        rsrv_available_start_day_num,
        rsrv_available_end_day_num,
        passenger_min_num
    FROM
        fare_type {executed in 3 msec}
date:2017-09-14 14:10:47	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:<==      Total: 10
date:2017-09-14 14:10:47	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==>  Preparing: SELECT fm.flight_name, fm.departure_time, fm.arrival_time, fm.craft_type, r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM flight_master fm, route r, airport a_dep, airport a_arr WHERE fm.route_no = r.route_no AND r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 14:10:47	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==> Parameters: 
date:2017-09-14 14:10:47	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
3. SELECT
        fm.flight_name,
        fm.departure_time,
        fm.arrival_time,
        fm.craft_type,
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        flight_master fm,
        route r,
        airport a_dep,
        airport a_arr
    WHERE 
        fm.route_no = r.route_no
    AND
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 20 msec}
date:2017-09-14 14:10:47	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:<==      Total: 126
date:2017-09-14 14:10:47	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==>  Preparing: SELECT peak_time_cd, peak_start_date, peak_end_date, multiplication_ratio FROM peak_time 
date:2017-09-14 14:10:47	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 14:10:47	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
4. SELECT
        peak_time_cd,
        peak_start_date,
        peak_end_date,
        multiplication_ratio
    FROM
        peak_time {executed in 1 msec}
date:2017-09-14 14:10:47	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:<==      Total: 16
date:2017-09-14 14:10:47	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==>  Preparing: SELECT r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM route r, airport a_dep, airport a_arr WHERE r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 14:10:47	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==> Parameters: 
date:2017-09-14 14:10:47	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
5. SELECT
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        route r,
        airport a_dep,
        airport a_arr
    WHERE
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 2 msec}
date:2017-09-14 14:10:47	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:<==      Total: 20
date:2017-09-14 14:10:47	thread:main	user:	X-Track:	level:WARN 	logger:org.dozer.config.GlobalSettings                 	message:Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
date:2017-09-14 14:10:48	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member_login {executed in 8 msec}
date:2017-09-14 14:10:48	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member {executed in 16 msec}
date:2017-09-14 14:10:48	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 14:10:48	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 11 msec}
date:2017-09-14 14:10:48	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 14:10:48	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 1 msec}
date:2017-09-14 14:10:48	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER {executed in 1 msec}
date:2017-09-14 14:10:48	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 14:13:46	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==>  Preparing: SELECT boarding_class_cd, boarding_class_name, extra_charge FROM boarding_class 
date:2017-09-14 14:13:46	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==> Parameters: 
date:2017-09-14 14:13:46	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
1. SELECT
        boarding_class_cd,
        boarding_class_name,
        extra_charge
    FROM
        boarding_class {executed in 19 msec}
date:2017-09-14 14:13:46	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:<==      Total: 2
date:2017-09-14 14:13:46	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==>  Preparing: SELECT fare_type_cd, fare_type_name, discount_rate, rsrv_available_start_day_num, rsrv_available_end_day_num, passenger_min_num FROM fare_type 
date:2017-09-14 14:13:46	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 14:13:46	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
2. SELECT
        fare_type_cd,
        fare_type_name,
        discount_rate,
        rsrv_available_start_day_num,
        rsrv_available_end_day_num,
        passenger_min_num
    FROM
        fare_type {executed in 2 msec}
date:2017-09-14 14:13:46	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:<==      Total: 10
date:2017-09-14 14:13:46	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==>  Preparing: SELECT fm.flight_name, fm.departure_time, fm.arrival_time, fm.craft_type, r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM flight_master fm, route r, airport a_dep, airport a_arr WHERE fm.route_no = r.route_no AND r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 14:13:46	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==> Parameters: 
date:2017-09-14 14:13:46	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
3. SELECT
        fm.flight_name,
        fm.departure_time,
        fm.arrival_time,
        fm.craft_type,
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        flight_master fm,
        route r,
        airport a_dep,
        airport a_arr
    WHERE 
        fm.route_no = r.route_no
    AND
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 5 msec}
date:2017-09-14 14:13:46	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:<==      Total: 126
date:2017-09-14 14:13:46	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==>  Preparing: SELECT peak_time_cd, peak_start_date, peak_end_date, multiplication_ratio FROM peak_time 
date:2017-09-14 14:13:46	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 14:13:46	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
4. SELECT
        peak_time_cd,
        peak_start_date,
        peak_end_date,
        multiplication_ratio
    FROM
        peak_time {executed in 1 msec}
date:2017-09-14 14:13:46	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:<==      Total: 16
date:2017-09-14 14:13:46	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==>  Preparing: SELECT r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM route r, airport a_dep, airport a_arr WHERE r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 14:13:46	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==> Parameters: 
date:2017-09-14 14:13:46	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
5. SELECT
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        route r,
        airport a_dep,
        airport a_arr
    WHERE
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 1 msec}
date:2017-09-14 14:13:46	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:<==      Total: 20
date:2017-09-14 14:13:46	thread:main	user:	X-Track:	level:WARN 	logger:org.dozer.config.GlobalSettings                 	message:Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
date:2017-09-14 14:13:47	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member_login {executed in 1 msec}
date:2017-09-14 14:13:47	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member {executed in 5 msec}
date:2017-09-14 14:13:47	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 14:13:47	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 3 msec}
date:2017-09-14 14:13:47	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 14:13:47	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 1 msec}
date:2017-09-14 14:13:47	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER {executed in 0 msec}
date:2017-09-14 14:13:47	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 14:16:53	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==>  Preparing: SELECT boarding_class_cd, boarding_class_name, extra_charge FROM boarding_class 
date:2017-09-14 14:16:53	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==> Parameters: 
date:2017-09-14 14:16:53	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
1. SELECT
        boarding_class_cd,
        boarding_class_name,
        extra_charge
    FROM
        boarding_class {executed in 21 msec}
date:2017-09-14 14:16:53	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:<==      Total: 2
date:2017-09-14 14:16:53	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==>  Preparing: SELECT fare_type_cd, fare_type_name, discount_rate, rsrv_available_start_day_num, rsrv_available_end_day_num, passenger_min_num FROM fare_type 
date:2017-09-14 14:16:53	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 14:16:53	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
2. SELECT
        fare_type_cd,
        fare_type_name,
        discount_rate,
        rsrv_available_start_day_num,
        rsrv_available_end_day_num,
        passenger_min_num
    FROM
        fare_type {executed in 2 msec}
date:2017-09-14 14:16:53	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:<==      Total: 10
date:2017-09-14 14:16:53	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==>  Preparing: SELECT fm.flight_name, fm.departure_time, fm.arrival_time, fm.craft_type, r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM flight_master fm, route r, airport a_dep, airport a_arr WHERE fm.route_no = r.route_no AND r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 14:16:53	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==> Parameters: 
date:2017-09-14 14:16:53	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
3. SELECT
        fm.flight_name,
        fm.departure_time,
        fm.arrival_time,
        fm.craft_type,
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        flight_master fm,
        route r,
        airport a_dep,
        airport a_arr
    WHERE 
        fm.route_no = r.route_no
    AND
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 5 msec}
date:2017-09-14 14:16:53	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:<==      Total: 126
date:2017-09-14 14:16:53	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==>  Preparing: SELECT peak_time_cd, peak_start_date, peak_end_date, multiplication_ratio FROM peak_time 
date:2017-09-14 14:16:53	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 14:16:53	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
4. SELECT
        peak_time_cd,
        peak_start_date,
        peak_end_date,
        multiplication_ratio
    FROM
        peak_time {executed in 1 msec}
date:2017-09-14 14:16:53	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:<==      Total: 16
date:2017-09-14 14:16:53	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==>  Preparing: SELECT r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM route r, airport a_dep, airport a_arr WHERE r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 14:16:53	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==> Parameters: 
date:2017-09-14 14:16:53	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
5. SELECT
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        route r,
        airport a_dep,
        airport a_arr
    WHERE
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 1 msec}
date:2017-09-14 14:16:53	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:<==      Total: 20
date:2017-09-14 14:16:54	thread:main	user:	X-Track:	level:WARN 	logger:org.dozer.config.GlobalSettings                 	message:Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
date:2017-09-14 14:16:54	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member_login {executed in 1 msec}
date:2017-09-14 14:16:54	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member {executed in 8 msec}
date:2017-09-14 14:16:54	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 14:16:54	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 3 msec}
date:2017-09-14 14:16:54	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 14:16:54	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 1 msec}
date:2017-09-14 14:16:54	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER {executed in 1 msec}
date:2017-09-14 14:16:54	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 14:16:54	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER_LOGIN {executed in 1 msec}
date:2017-09-14 14:16:54	thread:main	user:	X-Track:	level:ERROR	logger:jdbc.audit                                      	message:6. ResultSet.getString()
org.postgresql.util.PSQLException: ResultSet に列名  は見つかりませんでした。
	at org.postgresql.jdbc2.AbstractJdbc2ResultSet.findColumn(AbstractJdbc2ResultSet.java:2803)
	at org.postgresql.jdbc2.AbstractJdbc2ResultSet.getString(AbstractJdbc2ResultSet.java:2643)
	at org.apache.commons.dbcp2.DelegatingResultSet.getString(DelegatingResultSet.java:267)
	at org.apache.commons.dbcp2.DelegatingResultSet.getString(DelegatingResultSet.java:267)
	at net.sf.log4jdbc.ResultSetSpy.getString(ResultSetSpy.java:2553)
	at jp.co.ntt.atrs.domain.repository.member.MemberRepositoryTestVerDbunit$3.mapRow(MemberRepositoryTestVerDbunit.java:281)
	at jp.co.ntt.atrs.domain.repository.member.MemberRepositoryTestVerDbunit$3.mapRow(MemberRepositoryTestVerDbunit.java:1)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:93)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:60)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:459)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:404)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:470)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:480)
	at jp.co.ntt.atrs.domain.repository.member.MemberRepositoryTestVerDbunit.DBsetUpDataListMemberLogin(MemberRepositoryTestVerDbunit.java:277)
	at jp.co.ntt.atrs.domain.repository.member.MemberRepositoryTestVerDbunit.setUp(MemberRepositoryTestVerDbunit.java:95)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:254)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:89)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:193)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
date:2017-09-14 14:16:54	thread:main	user:	X-Track:	level:ERROR	logger:jdbc.sqlonly                                    	message:6. ResultSet.getString()
org.postgresql.util.PSQLException: ResultSet に列名  は見つかりませんでした。
	at org.postgresql.jdbc2.AbstractJdbc2ResultSet.findColumn(AbstractJdbc2ResultSet.java:2803)
	at org.postgresql.jdbc2.AbstractJdbc2ResultSet.getString(AbstractJdbc2ResultSet.java:2643)
	at org.apache.commons.dbcp2.DelegatingResultSet.getString(DelegatingResultSet.java:267)
	at org.apache.commons.dbcp2.DelegatingResultSet.getString(DelegatingResultSet.java:267)
	at net.sf.log4jdbc.ResultSetSpy.getString(ResultSetSpy.java:2553)
	at jp.co.ntt.atrs.domain.repository.member.MemberRepositoryTestVerDbunit$3.mapRow(MemberRepositoryTestVerDbunit.java:281)
	at jp.co.ntt.atrs.domain.repository.member.MemberRepositoryTestVerDbunit$3.mapRow(MemberRepositoryTestVerDbunit.java:1)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:93)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:60)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:459)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:404)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:470)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:480)
	at jp.co.ntt.atrs.domain.repository.member.MemberRepositoryTestVerDbunit.DBsetUpDataListMemberLogin(MemberRepositoryTestVerDbunit.java:277)
	at jp.co.ntt.atrs.domain.repository.member.MemberRepositoryTestVerDbunit.setUp(MemberRepositoryTestVerDbunit.java:95)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:254)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:89)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:193)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
date:2017-09-14 14:16:54	thread:main	user:	X-Track:	level:ERROR	logger:jdbc.sqltiming                                  	message:6. ResultSet.getString()
org.postgresql.util.PSQLException: ResultSet に列名  は見つかりませんでした。
	at org.postgresql.jdbc2.AbstractJdbc2ResultSet.findColumn(AbstractJdbc2ResultSet.java:2803)
	at org.postgresql.jdbc2.AbstractJdbc2ResultSet.getString(AbstractJdbc2ResultSet.java:2643)
	at org.apache.commons.dbcp2.DelegatingResultSet.getString(DelegatingResultSet.java:267)
	at org.apache.commons.dbcp2.DelegatingResultSet.getString(DelegatingResultSet.java:267)
	at net.sf.log4jdbc.ResultSetSpy.getString(ResultSetSpy.java:2553)
	at jp.co.ntt.atrs.domain.repository.member.MemberRepositoryTestVerDbunit$3.mapRow(MemberRepositoryTestVerDbunit.java:281)
	at jp.co.ntt.atrs.domain.repository.member.MemberRepositoryTestVerDbunit$3.mapRow(MemberRepositoryTestVerDbunit.java:1)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:93)
	at org.springframework.jdbc.core.RowMapperResultSetExtractor.extractData(RowMapperResultSetExtractor.java:60)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:459)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:404)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:470)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:480)
	at jp.co.ntt.atrs.domain.repository.member.MemberRepositoryTestVerDbunit.DBsetUpDataListMemberLogin(MemberRepositoryTestVerDbunit.java:277)
	at jp.co.ntt.atrs.domain.repository.member.MemberRepositoryTestVerDbunit.setUp(MemberRepositoryTestVerDbunit.java:95)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:254)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:89)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:193)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
date:2017-09-14 14:18:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==>  Preparing: SELECT boarding_class_cd, boarding_class_name, extra_charge FROM boarding_class 
date:2017-09-14 14:18:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==> Parameters: 
date:2017-09-14 14:18:29	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
1. SELECT
        boarding_class_cd,
        boarding_class_name,
        extra_charge
    FROM
        boarding_class {executed in 19 msec}
date:2017-09-14 14:18:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:<==      Total: 2
date:2017-09-14 14:18:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==>  Preparing: SELECT fare_type_cd, fare_type_name, discount_rate, rsrv_available_start_day_num, rsrv_available_end_day_num, passenger_min_num FROM fare_type 
date:2017-09-14 14:18:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 14:18:29	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
2. SELECT
        fare_type_cd,
        fare_type_name,
        discount_rate,
        rsrv_available_start_day_num,
        rsrv_available_end_day_num,
        passenger_min_num
    FROM
        fare_type {executed in 1 msec}
date:2017-09-14 14:18:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:<==      Total: 10
date:2017-09-14 14:18:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==>  Preparing: SELECT fm.flight_name, fm.departure_time, fm.arrival_time, fm.craft_type, r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM flight_master fm, route r, airport a_dep, airport a_arr WHERE fm.route_no = r.route_no AND r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 14:18:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==> Parameters: 
date:2017-09-14 14:18:29	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
3. SELECT
        fm.flight_name,
        fm.departure_time,
        fm.arrival_time,
        fm.craft_type,
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        flight_master fm,
        route r,
        airport a_dep,
        airport a_arr
    WHERE 
        fm.route_no = r.route_no
    AND
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 5 msec}
date:2017-09-14 14:18:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:<==      Total: 126
date:2017-09-14 14:18:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==>  Preparing: SELECT peak_time_cd, peak_start_date, peak_end_date, multiplication_ratio FROM peak_time 
date:2017-09-14 14:18:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 14:18:29	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
4. SELECT
        peak_time_cd,
        peak_start_date,
        peak_end_date,
        multiplication_ratio
    FROM
        peak_time {executed in 2 msec}
date:2017-09-14 14:18:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:<==      Total: 16
date:2017-09-14 14:18:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==>  Preparing: SELECT r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM route r, airport a_dep, airport a_arr WHERE r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 14:18:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==> Parameters: 
date:2017-09-14 14:18:29	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
5. SELECT
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        route r,
        airport a_dep,
        airport a_arr
    WHERE
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 1 msec}
date:2017-09-14 14:18:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:<==      Total: 20
date:2017-09-14 14:18:29	thread:main	user:	X-Track:	level:WARN 	logger:org.dozer.config.GlobalSettings                 	message:Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
date:2017-09-14 14:18:30	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member_login {executed in 1 msec}
date:2017-09-14 14:18:30	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member {executed in 9 msec}
date:2017-09-14 14:18:30	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 14:18:30	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 4 msec}
date:2017-09-14 14:18:30	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 14:18:30	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 1 msec}
date:2017-09-14 14:18:30	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER {executed in 1 msec}
date:2017-09-14 14:18:30	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 14:18:30	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER_LOGIN {executed in 2 msec}
date:2017-09-14 14:21:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==>  Preparing: SELECT boarding_class_cd, boarding_class_name, extra_charge FROM boarding_class 
date:2017-09-14 14:21:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==> Parameters: 
date:2017-09-14 14:21:40	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
1. SELECT
        boarding_class_cd,
        boarding_class_name,
        extra_charge
    FROM
        boarding_class {executed in 20 msec}
date:2017-09-14 14:21:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:<==      Total: 2
date:2017-09-14 14:21:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==>  Preparing: SELECT fare_type_cd, fare_type_name, discount_rate, rsrv_available_start_day_num, rsrv_available_end_day_num, passenger_min_num FROM fare_type 
date:2017-09-14 14:21:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 14:21:40	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
2. SELECT
        fare_type_cd,
        fare_type_name,
        discount_rate,
        rsrv_available_start_day_num,
        rsrv_available_end_day_num,
        passenger_min_num
    FROM
        fare_type {executed in 2 msec}
date:2017-09-14 14:21:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:<==      Total: 10
date:2017-09-14 14:21:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==>  Preparing: SELECT fm.flight_name, fm.departure_time, fm.arrival_time, fm.craft_type, r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM flight_master fm, route r, airport a_dep, airport a_arr WHERE fm.route_no = r.route_no AND r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 14:21:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==> Parameters: 
date:2017-09-14 14:21:40	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
3. SELECT
        fm.flight_name,
        fm.departure_time,
        fm.arrival_time,
        fm.craft_type,
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        flight_master fm,
        route r,
        airport a_dep,
        airport a_arr
    WHERE 
        fm.route_no = r.route_no
    AND
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 5 msec}
date:2017-09-14 14:21:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:<==      Total: 126
date:2017-09-14 14:21:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==>  Preparing: SELECT peak_time_cd, peak_start_date, peak_end_date, multiplication_ratio FROM peak_time 
date:2017-09-14 14:21:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 14:21:40	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
4. SELECT
        peak_time_cd,
        peak_start_date,
        peak_end_date,
        multiplication_ratio
    FROM
        peak_time {executed in 2 msec}
date:2017-09-14 14:21:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:<==      Total: 16
date:2017-09-14 14:21:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==>  Preparing: SELECT r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM route r, airport a_dep, airport a_arr WHERE r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 14:21:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==> Parameters: 
date:2017-09-14 14:21:40	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
5. SELECT
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        route r,
        airport a_dep,
        airport a_arr
    WHERE
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 1 msec}
date:2017-09-14 14:21:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:<==      Total: 20
date:2017-09-14 14:21:40	thread:main	user:	X-Track:	level:WARN 	logger:org.dozer.config.GlobalSettings                 	message:Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
date:2017-09-14 14:21:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member_login {executed in 1 msec}
date:2017-09-14 14:21:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member {executed in 9 msec}
date:2017-09-14 14:21:41	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 14:21:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 3 msec}
date:2017-09-14 14:21:41	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 14:21:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 1 msec}
date:2017-09-14 14:21:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER {executed in 1 msec}
date:2017-09-14 14:21:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 14:21:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER_LOGIN {executed in 0 msec}
date:2017-09-14 14:21:57	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==>  Preparing: SELECT boarding_class_cd, boarding_class_name, extra_charge FROM boarding_class 
date:2017-09-14 14:21:57	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==> Parameters: 
date:2017-09-14 14:21:57	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
1. SELECT
        boarding_class_cd,
        boarding_class_name,
        extra_charge
    FROM
        boarding_class {executed in 19 msec}
date:2017-09-14 14:21:58	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:<==      Total: 2
date:2017-09-14 14:21:58	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==>  Preparing: SELECT fare_type_cd, fare_type_name, discount_rate, rsrv_available_start_day_num, rsrv_available_end_day_num, passenger_min_num FROM fare_type 
date:2017-09-14 14:21:58	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 14:21:58	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
2. SELECT
        fare_type_cd,
        fare_type_name,
        discount_rate,
        rsrv_available_start_day_num,
        rsrv_available_end_day_num,
        passenger_min_num
    FROM
        fare_type {executed in 2 msec}
date:2017-09-14 14:21:58	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:<==      Total: 10
date:2017-09-14 14:21:58	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==>  Preparing: SELECT fm.flight_name, fm.departure_time, fm.arrival_time, fm.craft_type, r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM flight_master fm, route r, airport a_dep, airport a_arr WHERE fm.route_no = r.route_no AND r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 14:21:58	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==> Parameters: 
date:2017-09-14 14:21:58	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
3. SELECT
        fm.flight_name,
        fm.departure_time,
        fm.arrival_time,
        fm.craft_type,
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        flight_master fm,
        route r,
        airport a_dep,
        airport a_arr
    WHERE 
        fm.route_no = r.route_no
    AND
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 4 msec}
date:2017-09-14 14:21:58	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:<==      Total: 126
date:2017-09-14 14:21:58	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==>  Preparing: SELECT peak_time_cd, peak_start_date, peak_end_date, multiplication_ratio FROM peak_time 
date:2017-09-14 14:21:58	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 14:21:58	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
4. SELECT
        peak_time_cd,
        peak_start_date,
        peak_end_date,
        multiplication_ratio
    FROM
        peak_time {executed in 2 msec}
date:2017-09-14 14:21:58	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:<==      Total: 16
date:2017-09-14 14:21:58	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==>  Preparing: SELECT r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM route r, airport a_dep, airport a_arr WHERE r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 14:21:58	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==> Parameters: 
date:2017-09-14 14:21:58	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
5. SELECT
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        route r,
        airport a_dep,
        airport a_arr
    WHERE
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 2 msec}
date:2017-09-14 14:21:58	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:<==      Total: 20
date:2017-09-14 14:21:58	thread:main	user:	X-Track:	level:WARN 	logger:org.dozer.config.GlobalSettings                 	message:Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
date:2017-09-14 14:21:59	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member_login {executed in 1 msec}
date:2017-09-14 14:21:59	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member {executed in 7 msec}
date:2017-09-14 14:21:59	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 14:21:59	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 4 msec}
date:2017-09-14 14:21:59	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 14:21:59	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 1 msec}
date:2017-09-14 14:21:59	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER {executed in 1 msec}
date:2017-09-14 14:21:59	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 14:21:59	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER_LOGIN {executed in 1 msec}
date:2017-09-14 14:28:35	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==>  Preparing: SELECT boarding_class_cd, boarding_class_name, extra_charge FROM boarding_class 
date:2017-09-14 14:28:35	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==> Parameters: 
date:2017-09-14 14:28:35	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
1. SELECT
        boarding_class_cd,
        boarding_class_name,
        extra_charge
    FROM
        boarding_class {executed in 20 msec}
date:2017-09-14 14:28:35	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:<==      Total: 2
date:2017-09-14 14:28:35	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==>  Preparing: SELECT fare_type_cd, fare_type_name, discount_rate, rsrv_available_start_day_num, rsrv_available_end_day_num, passenger_min_num FROM fare_type 
date:2017-09-14 14:28:35	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 14:28:35	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
2. SELECT
        fare_type_cd,
        fare_type_name,
        discount_rate,
        rsrv_available_start_day_num,
        rsrv_available_end_day_num,
        passenger_min_num
    FROM
        fare_type {executed in 2 msec}
date:2017-09-14 14:28:35	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:<==      Total: 10
date:2017-09-14 14:28:35	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==>  Preparing: SELECT fm.flight_name, fm.departure_time, fm.arrival_time, fm.craft_type, r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM flight_master fm, route r, airport a_dep, airport a_arr WHERE fm.route_no = r.route_no AND r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 14:28:35	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==> Parameters: 
date:2017-09-14 14:28:35	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
3. SELECT
        fm.flight_name,
        fm.departure_time,
        fm.arrival_time,
        fm.craft_type,
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        flight_master fm,
        route r,
        airport a_dep,
        airport a_arr
    WHERE 
        fm.route_no = r.route_no
    AND
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 6 msec}
date:2017-09-14 14:28:35	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:<==      Total: 126
date:2017-09-14 14:28:35	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==>  Preparing: SELECT peak_time_cd, peak_start_date, peak_end_date, multiplication_ratio FROM peak_time 
date:2017-09-14 14:28:35	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 14:28:35	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
4. SELECT
        peak_time_cd,
        peak_start_date,
        peak_end_date,
        multiplication_ratio
    FROM
        peak_time {executed in 1 msec}
date:2017-09-14 14:28:35	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:<==      Total: 16
date:2017-09-14 14:28:35	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==>  Preparing: SELECT r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM route r, airport a_dep, airport a_arr WHERE r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 14:28:35	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==> Parameters: 
date:2017-09-14 14:28:35	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
5. SELECT
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        route r,
        airport a_dep,
        airport a_arr
    WHERE
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 1 msec}
date:2017-09-14 14:28:35	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:<==      Total: 20
date:2017-09-14 14:28:36	thread:main	user:	X-Track:	level:WARN 	logger:org.dozer.config.GlobalSettings                 	message:Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
date:2017-09-14 14:28:36	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member_login {executed in 3 msec}
date:2017-09-14 14:28:36	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member {executed in 14 msec}
date:2017-09-14 14:28:36	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 14:28:36	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 6 msec}
date:2017-09-14 14:28:36	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 14:28:36	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 2 msec}
date:2017-09-14 14:28:36	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER {executed in 1 msec}
date:2017-09-14 14:28:36	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 14:28:36	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER_LOGIN {executed in 0 msec}
date:2017-09-14 14:51:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==>  Preparing: SELECT boarding_class_cd, boarding_class_name, extra_charge FROM boarding_class 
date:2017-09-14 14:51:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==> Parameters: 
date:2017-09-14 14:51:29	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
1. SELECT
        boarding_class_cd,
        boarding_class_name,
        extra_charge
    FROM
        boarding_class {executed in 16 msec}
date:2017-09-14 14:51:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:<==      Total: 2
date:2017-09-14 14:51:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==>  Preparing: SELECT fare_type_cd, fare_type_name, discount_rate, rsrv_available_start_day_num, rsrv_available_end_day_num, passenger_min_num FROM fare_type 
date:2017-09-14 14:51:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 14:51:29	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
2. SELECT
        fare_type_cd,
        fare_type_name,
        discount_rate,
        rsrv_available_start_day_num,
        rsrv_available_end_day_num,
        passenger_min_num
    FROM
        fare_type {executed in 2 msec}
date:2017-09-14 14:51:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:<==      Total: 10
date:2017-09-14 14:51:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==>  Preparing: SELECT fm.flight_name, fm.departure_time, fm.arrival_time, fm.craft_type, r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM flight_master fm, route r, airport a_dep, airport a_arr WHERE fm.route_no = r.route_no AND r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 14:51:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==> Parameters: 
date:2017-09-14 14:51:29	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
3. SELECT
        fm.flight_name,
        fm.departure_time,
        fm.arrival_time,
        fm.craft_type,
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        flight_master fm,
        route r,
        airport a_dep,
        airport a_arr
    WHERE 
        fm.route_no = r.route_no
    AND
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 5 msec}
date:2017-09-14 14:51:30	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:<==      Total: 126
date:2017-09-14 14:51:30	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==>  Preparing: SELECT peak_time_cd, peak_start_date, peak_end_date, multiplication_ratio FROM peak_time 
date:2017-09-14 14:51:30	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 14:51:30	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
4. SELECT
        peak_time_cd,
        peak_start_date,
        peak_end_date,
        multiplication_ratio
    FROM
        peak_time {executed in 2 msec}
date:2017-09-14 14:51:30	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:<==      Total: 16
date:2017-09-14 14:51:30	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==>  Preparing: SELECT r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM route r, airport a_dep, airport a_arr WHERE r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 14:51:30	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==> Parameters: 
date:2017-09-14 14:51:30	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
5. SELECT
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        route r,
        airport a_dep,
        airport a_arr
    WHERE
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 3 msec}
date:2017-09-14 14:51:30	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:<==      Total: 20
date:2017-09-14 14:51:30	thread:main	user:	X-Track:	level:WARN 	logger:org.dozer.config.GlobalSettings                 	message:Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
date:2017-09-14 14:51:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member_login {executed in 2 msec}
date:2017-09-14 14:51:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member {executed in 9 msec}
date:2017-09-14 14:51:31	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 14:51:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 5 msec}
date:2017-09-14 14:51:31	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 14:51:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 1 msec}
date:2017-09-14 14:51:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER {executed in 1 msec}
date:2017-09-14 14:51:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 14:51:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER_LOGIN {executed in 1 msec}
date:2017-09-14 15:03:50	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==>  Preparing: SELECT boarding_class_cd, boarding_class_name, extra_charge FROM boarding_class 
date:2017-09-14 15:03:50	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==> Parameters: 
date:2017-09-14 15:03:50	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
1. SELECT
        boarding_class_cd,
        boarding_class_name,
        extra_charge
    FROM
        boarding_class {executed in 18 msec}
date:2017-09-14 15:03:50	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:<==      Total: 2
date:2017-09-14 15:03:50	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==>  Preparing: SELECT fare_type_cd, fare_type_name, discount_rate, rsrv_available_start_day_num, rsrv_available_end_day_num, passenger_min_num FROM fare_type 
date:2017-09-14 15:03:50	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 15:03:50	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
2. SELECT
        fare_type_cd,
        fare_type_name,
        discount_rate,
        rsrv_available_start_day_num,
        rsrv_available_end_day_num,
        passenger_min_num
    FROM
        fare_type {executed in 2 msec}
date:2017-09-14 15:03:50	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:<==      Total: 10
date:2017-09-14 15:03:50	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==>  Preparing: SELECT fm.flight_name, fm.departure_time, fm.arrival_time, fm.craft_type, r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM flight_master fm, route r, airport a_dep, airport a_arr WHERE fm.route_no = r.route_no AND r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 15:03:50	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==> Parameters: 
date:2017-09-14 15:03:50	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
3. SELECT
        fm.flight_name,
        fm.departure_time,
        fm.arrival_time,
        fm.craft_type,
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        flight_master fm,
        route r,
        airport a_dep,
        airport a_arr
    WHERE 
        fm.route_no = r.route_no
    AND
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 7 msec}
date:2017-09-14 15:03:50	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:<==      Total: 126
date:2017-09-14 15:03:50	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==>  Preparing: SELECT peak_time_cd, peak_start_date, peak_end_date, multiplication_ratio FROM peak_time 
date:2017-09-14 15:03:50	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 15:03:50	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
4. SELECT
        peak_time_cd,
        peak_start_date,
        peak_end_date,
        multiplication_ratio
    FROM
        peak_time {executed in 2 msec}
date:2017-09-14 15:03:50	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:<==      Total: 16
date:2017-09-14 15:03:50	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==>  Preparing: SELECT r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM route r, airport a_dep, airport a_arr WHERE r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 15:03:50	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==> Parameters: 
date:2017-09-14 15:03:50	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
5. SELECT
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        route r,
        airport a_dep,
        airport a_arr
    WHERE
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 1 msec}
date:2017-09-14 15:03:50	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:<==      Total: 20
date:2017-09-14 15:03:51	thread:main	user:	X-Track:	level:WARN 	logger:org.dozer.config.GlobalSettings                 	message:Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
date:2017-09-14 15:03:51	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member_login {executed in 1 msec}
date:2017-09-14 15:03:51	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member {executed in 12 msec}
date:2017-09-14 15:03:51	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:03:51	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 3 msec}
date:2017-09-14 15:03:51	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:03:51	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 1 msec}
date:2017-09-14 15:03:51	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER {executed in 1 msec}
date:2017-09-14 15:03:51	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 0 msec}
date:2017-09-14 15:03:51	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER_LOGIN {executed in 1 msec}
date:2017-09-14 15:09:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==>  Preparing: SELECT boarding_class_cd, boarding_class_name, extra_charge FROM boarding_class 
date:2017-09-14 15:09:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==> Parameters: 
date:2017-09-14 15:09:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
1. SELECT
        boarding_class_cd,
        boarding_class_name,
        extra_charge
    FROM
        boarding_class {executed in 20 msec}
date:2017-09-14 15:09:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:<==      Total: 2
date:2017-09-14 15:09:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==>  Preparing: SELECT fare_type_cd, fare_type_name, discount_rate, rsrv_available_start_day_num, rsrv_available_end_day_num, passenger_min_num FROM fare_type 
date:2017-09-14 15:09:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 15:09:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
2. SELECT
        fare_type_cd,
        fare_type_name,
        discount_rate,
        rsrv_available_start_day_num,
        rsrv_available_end_day_num,
        passenger_min_num
    FROM
        fare_type {executed in 1 msec}
date:2017-09-14 15:09:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:<==      Total: 10
date:2017-09-14 15:09:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==>  Preparing: SELECT fm.flight_name, fm.departure_time, fm.arrival_time, fm.craft_type, r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM flight_master fm, route r, airport a_dep, airport a_arr WHERE fm.route_no = r.route_no AND r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 15:09:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==> Parameters: 
date:2017-09-14 15:09:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
3. SELECT
        fm.flight_name,
        fm.departure_time,
        fm.arrival_time,
        fm.craft_type,
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        flight_master fm,
        route r,
        airport a_dep,
        airport a_arr
    WHERE 
        fm.route_no = r.route_no
    AND
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 5 msec}
date:2017-09-14 15:09:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:<==      Total: 126
date:2017-09-14 15:09:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==>  Preparing: SELECT peak_time_cd, peak_start_date, peak_end_date, multiplication_ratio FROM peak_time 
date:2017-09-14 15:09:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 15:09:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
4. SELECT
        peak_time_cd,
        peak_start_date,
        peak_end_date,
        multiplication_ratio
    FROM
        peak_time {executed in 2 msec}
date:2017-09-14 15:09:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:<==      Total: 16
date:2017-09-14 15:09:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==>  Preparing: SELECT r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM route r, airport a_dep, airport a_arr WHERE r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 15:09:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==> Parameters: 
date:2017-09-14 15:09:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
5. SELECT
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        route r,
        airport a_dep,
        airport a_arr
    WHERE
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 2 msec}
date:2017-09-14 15:09:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:<==      Total: 20
date:2017-09-14 15:09:03	thread:main	user:	X-Track:	level:WARN 	logger:org.dozer.config.GlobalSettings                 	message:Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
date:2017-09-14 15:09:03	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member_login {executed in 1 msec}
date:2017-09-14 15:09:03	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member {executed in 5 msec}
date:2017-09-14 15:09:03	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:09:03	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 2 msec}
date:2017-09-14 15:09:03	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:09:03	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 1 msec}
date:2017-09-14 15:09:03	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER {executed in 2 msec}
date:2017-09-14 15:09:03	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:09:03	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER_LOGIN {executed in 1 msec}
date:2017-09-14 15:09:03	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 1 msec}
date:2017-09-14 15:09:03	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:09:03	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==>  Preparing: UPDATE member SET kanji_family_name = ?, kanji_given_name = ?, kana_family_name = ?, kana_given_name = ?, birthday = ?, gender = ?, tel = ?, zip_code = ?, address = ?, mail = ?, credit_no = ?, credit_type_cd = ?, credit_term = ? WHERE customer_no = ? 
date:2017-09-14 15:09:03	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==> Parameters: 電信柱(String), 花子(String), デンデン(String), ハナコ(String), 1979-01-25 00:00:00.0(Timestamp), F(String), 111-1111-1111(String), 1111111(String), 東京都港区港南Ｘ－Ｘ－Ｘ(String), xxxxxx@ntt.co.jp(String), 1111111111111111(String), VIS(String), 01/20(String), 0000000001(String)
date:2017-09-14 15:09:03	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
6. UPDATE member SET
        kanji_family_name = '電信柱',
        kanji_given_name = '花子',
        kana_family_name = 'デンデン',
        kana_given_name = 'ハナコ',
        birthday = '01/25/1979 00:00:00.000',
        gender = 'F',
        tel = '111-1111-1111',
        zip_code = '1111111',
        address = '東京都港区港南Ｘ－Ｘ－Ｘ',
        mail = 'xxxxxx@ntt.co.jp',
        credit_no = '1111111111111111',
        credit_type_cd = 'VIS',
        credit_term = '01/20'
    WHERE
        customer_no = '0000000001' {executed in 1 msec}
date:2017-09-14 15:09:03	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:<==    Updates: 1
date:2017-09-14 15:09:03	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 0 msec}
date:2017-09-14 15:09:03	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 0 msec}
date:2017-09-14 15:09:03	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.AbstractResultSetTable.<init>(AbstractResultSetTable.java:110)
6. select customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term from member order by customer_no {executed in 1 msec}
date:2017-09-14 15:09:03	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.AbstractResultSetTable.<init>(AbstractResultSetTable.java:110)
6. select customer_no, password, last_password, login_date_time, login_flg from member_login order by customer_no {executed in 1 msec}
date:2017-09-14 15:12:21	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==>  Preparing: SELECT boarding_class_cd, boarding_class_name, extra_charge FROM boarding_class 
date:2017-09-14 15:12:21	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==> Parameters: 
date:2017-09-14 15:12:21	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
1. SELECT
        boarding_class_cd,
        boarding_class_name,
        extra_charge
    FROM
        boarding_class {executed in 20 msec}
date:2017-09-14 15:12:21	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:<==      Total: 2
date:2017-09-14 15:12:21	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==>  Preparing: SELECT fare_type_cd, fare_type_name, discount_rate, rsrv_available_start_day_num, rsrv_available_end_day_num, passenger_min_num FROM fare_type 
date:2017-09-14 15:12:21	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 15:12:21	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
2. SELECT
        fare_type_cd,
        fare_type_name,
        discount_rate,
        rsrv_available_start_day_num,
        rsrv_available_end_day_num,
        passenger_min_num
    FROM
        fare_type {executed in 2 msec}
date:2017-09-14 15:12:21	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:<==      Total: 10
date:2017-09-14 15:12:21	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==>  Preparing: SELECT fm.flight_name, fm.departure_time, fm.arrival_time, fm.craft_type, r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM flight_master fm, route r, airport a_dep, airport a_arr WHERE fm.route_no = r.route_no AND r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 15:12:21	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==> Parameters: 
date:2017-09-14 15:12:21	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
3. SELECT
        fm.flight_name,
        fm.departure_time,
        fm.arrival_time,
        fm.craft_type,
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        flight_master fm,
        route r,
        airport a_dep,
        airport a_arr
    WHERE 
        fm.route_no = r.route_no
    AND
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 4 msec}
date:2017-09-14 15:12:21	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:<==      Total: 126
date:2017-09-14 15:12:21	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==>  Preparing: SELECT peak_time_cd, peak_start_date, peak_end_date, multiplication_ratio FROM peak_time 
date:2017-09-14 15:12:21	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 15:12:21	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
4. SELECT
        peak_time_cd,
        peak_start_date,
        peak_end_date,
        multiplication_ratio
    FROM
        peak_time {executed in 2 msec}
date:2017-09-14 15:12:21	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:<==      Total: 16
date:2017-09-14 15:12:21	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==>  Preparing: SELECT r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM route r, airport a_dep, airport a_arr WHERE r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 15:12:21	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==> Parameters: 
date:2017-09-14 15:12:21	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
5. SELECT
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        route r,
        airport a_dep,
        airport a_arr
    WHERE
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 2 msec}
date:2017-09-14 15:12:21	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:<==      Total: 20
date:2017-09-14 15:12:21	thread:main	user:	X-Track:	level:WARN 	logger:org.dozer.config.GlobalSettings                 	message:Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
date:2017-09-14 15:12:22	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member_login {executed in 1 msec}
date:2017-09-14 15:12:22	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member {executed in 7 msec}
date:2017-09-14 15:12:22	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:12:22	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 4 msec}
date:2017-09-14 15:12:22	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:12:22	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 2 msec}
date:2017-09-14 15:12:22	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER {executed in 1 msec}
date:2017-09-14 15:12:22	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:12:22	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER_LOGIN {executed in 6 msec}
date:2017-09-14 15:12:22	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 2 msec}
date:2017-09-14 15:12:22	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:12:22	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==>  Preparing: UPDATE member SET kanji_family_name = ?, kanji_given_name = ?, kana_family_name = ?, kana_given_name = ?, birthday = ?, gender = ?, tel = ?, zip_code = ?, address = ?, mail = ?, credit_no = ?, credit_type_cd = ?, credit_term = ? WHERE customer_no = ? 
date:2017-09-14 15:12:22	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==> Parameters: 電信柱(String), 花子(String), デンデン(String), ハナコ(String), 1979-01-25 00:00:00.0(Timestamp), F(String), 111-1111-1111(String), 1111111(String), 東京都港区港南Ｘ－Ｘ－Ｘ(String), xxxxxx@ntt.co.jp(String), 1111111111111111(String), VIS(String), 01/20(String), 0000000001(String)
date:2017-09-14 15:12:22	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
6. UPDATE member SET
        kanji_family_name = '電信柱',
        kanji_given_name = '花子',
        kana_family_name = 'デンデン',
        kana_given_name = 'ハナコ',
        birthday = '01/25/1979 00:00:00.000',
        gender = 'F',
        tel = '111-1111-1111',
        zip_code = '1111111',
        address = '東京都港区港南Ｘ－Ｘ－Ｘ',
        mail = 'xxxxxx@ntt.co.jp',
        credit_no = '1111111111111111',
        credit_type_cd = 'VIS',
        credit_term = '01/20'
    WHERE
        customer_no = '0000000001' {executed in 1 msec}
date:2017-09-14 15:12:22	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:<==    Updates: 1
date:2017-09-14 15:12:22	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 1 msec}
date:2017-09-14 15:12:22	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:12:22	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.AbstractResultSetTable.<init>(AbstractResultSetTable.java:110)
6. select customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term from member order by customer_no {executed in 1 msec}
date:2017-09-14 15:12:22	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.AbstractResultSetTable.<init>(AbstractResultSetTable.java:110)
6. select customer_no, password, last_password, login_date_time, login_flg from member_login order by customer_no {executed in 0 msec}
date:2017-09-14 15:17:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==>  Preparing: SELECT boarding_class_cd, boarding_class_name, extra_charge FROM boarding_class 
date:2017-09-14 15:17:29	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==> Parameters: 
date:2017-09-14 15:17:30	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
1. SELECT
        boarding_class_cd,
        boarding_class_name,
        extra_charge
    FROM
        boarding_class {executed in 18 msec}
date:2017-09-14 15:17:30	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:<==      Total: 2
date:2017-09-14 15:17:30	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==>  Preparing: SELECT fare_type_cd, fare_type_name, discount_rate, rsrv_available_start_day_num, rsrv_available_end_day_num, passenger_min_num FROM fare_type 
date:2017-09-14 15:17:30	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 15:17:30	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
2. SELECT
        fare_type_cd,
        fare_type_name,
        discount_rate,
        rsrv_available_start_day_num,
        rsrv_available_end_day_num,
        passenger_min_num
    FROM
        fare_type {executed in 1 msec}
date:2017-09-14 15:17:30	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:<==      Total: 10
date:2017-09-14 15:17:30	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==>  Preparing: SELECT fm.flight_name, fm.departure_time, fm.arrival_time, fm.craft_type, r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM flight_master fm, route r, airport a_dep, airport a_arr WHERE fm.route_no = r.route_no AND r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 15:17:30	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==> Parameters: 
date:2017-09-14 15:17:30	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
3. SELECT
        fm.flight_name,
        fm.departure_time,
        fm.arrival_time,
        fm.craft_type,
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        flight_master fm,
        route r,
        airport a_dep,
        airport a_arr
    WHERE 
        fm.route_no = r.route_no
    AND
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 5 msec}
date:2017-09-14 15:17:30	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:<==      Total: 126
date:2017-09-14 15:17:30	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==>  Preparing: SELECT peak_time_cd, peak_start_date, peak_end_date, multiplication_ratio FROM peak_time 
date:2017-09-14 15:17:30	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 15:17:30	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
4. SELECT
        peak_time_cd,
        peak_start_date,
        peak_end_date,
        multiplication_ratio
    FROM
        peak_time {executed in 1 msec}
date:2017-09-14 15:17:30	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:<==      Total: 16
date:2017-09-14 15:17:30	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==>  Preparing: SELECT r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM route r, airport a_dep, airport a_arr WHERE r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 15:17:30	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==> Parameters: 
date:2017-09-14 15:17:30	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
5. SELECT
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        route r,
        airport a_dep,
        airport a_arr
    WHERE
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 2 msec}
date:2017-09-14 15:17:30	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:<==      Total: 20
date:2017-09-14 15:17:30	thread:main	user:	X-Track:	level:WARN 	logger:org.dozer.config.GlobalSettings                 	message:Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member_login {executed in 2 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member {executed in 7 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 3 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 1 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER {executed in 1 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 0 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER_LOGIN {executed in 1 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 0 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==>  Preparing: UPDATE member SET kanji_family_name = ?, kanji_given_name = ?, kana_family_name = ?, kana_given_name = ?, birthday = ?, gender = ?, tel = ?, zip_code = ?, address = ?, mail = ?, credit_no = ?, credit_type_cd = ?, credit_term = ? WHERE customer_no = ? 
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==> Parameters: 電信柱(String), 花子(String), デンデン(String), ハナコ(String), 1979-01-25 00:00:00.0(Timestamp), F(String), 111-1111-1111(String), 1111111(String), 東京都港区港南Ｘ－Ｘ－Ｘ(String), xxxxxx@ntt.co.jp(String), 1111111111111111(String), VIS(String), 01/20(String), 0000000001(String)
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
6. UPDATE member SET
        kanji_family_name = '電信柱',
        kanji_given_name = '花子',
        kana_family_name = 'デンデン',
        kana_given_name = 'ハナコ',
        birthday = '01/25/1979 00:00:00.000',
        gender = 'F',
        tel = '111-1111-1111',
        zip_code = '1111111',
        address = '東京都港区港南Ｘ－Ｘ－Ｘ',
        mail = 'xxxxxx@ntt.co.jp',
        credit_no = '1111111111111111',
        credit_type_cd = 'VIS',
        credit_term = '01/20'
    WHERE
        customer_no = '0000000001' {executed in 1 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:<==    Updates: 1
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 0 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.AbstractResultSetTable.<init>(AbstractResultSetTable.java:110)
6. select customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term from member order by customer_no {executed in 2 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.AbstractResultSetTable.<init>(AbstractResultSetTable.java:110)
6. select customer_no, password, last_password, login_date_time, login_flg from member_login order by customer_no {executed in 0 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
7. delete from member_login {executed in 1 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
7. delete from member {executed in 2 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
7. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 1 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
7. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 1 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
7. SELECT * FROM MEMBER {executed in 1 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
7. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 0 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
7. SELECT * FROM MEMBER_LOGIN {executed in 1 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.findOne     	message:==>  Preparing: SELECT m.customer_no, m.kanji_family_name, m.kanji_given_name, m.kana_family_name, m.kana_given_name, m.birthday, m.gender, m.tel, m.zip_code, m.address, m.mail, m.credit_no, m.credit_term, m_l.password, m_l.last_password, m_l.login_date_time, m_l.login_flg, c_t.credit_type_cd, c_t.credit_firm FROM member m, member_login m_l, credit_type c_t WHERE m.customer_no = ? AND m.customer_no = m_l.customer_no AND m.credit_type_cd = c_t.credit_type_cd 
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.findOne     	message:==> Parameters: 0000000001(String)
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
7. SELECT
        m.customer_no,
        m.kanji_family_name,
        m.kanji_given_name,
        m.kana_family_name,
        m.kana_given_name,
        m.birthday,
        m.gender,
        m.tel,
        m.zip_code,
        m.address,
        m.mail,
        m.credit_no,
        m.credit_term,
        m_l.password,
        m_l.last_password,
        m_l.login_date_time,
        m_l.login_flg,
        c_t.credit_type_cd,
        c_t.credit_firm
    FROM
        member m,
        member_login m_l,
        credit_type c_t
    WHERE
        m.customer_no = '0000000001'
    AND
        m.customer_no = m_l.customer_no
    AND
        m.credit_type_cd = c_t.credit_type_cd {executed in 1 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.findOne     	message:<==      Total: 1
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
7. SELECT * FROM member WHERE customer_no='0000000001' {executed in 1 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
7. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.AbstractResultSetTable.<init>(AbstractResultSetTable.java:110)
7. select customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term from member order by customer_no {executed in 1 msec}
date:2017-09-14 15:17:31	thread:main	user:	X-Track:	level:WARN 	logger:o.s.test.context.TestContextManager             	message:Caught exception while allowing TestExecutionListener [com.github.springtestdbunit.TransactionDbUnitTestExecutionListener@11ee02f8] to process 'after' execution for test: method [public void jp.co.ntt.atrs.domain.repository.member.MemberRepositoryTestVerDbunit.testUpdate2()], instance [jp.co.ntt.atrs.domain.repository.member.MemberRepositoryTestVerDbunit@4102b1b1], exception [null]
java.lang.Exception: junit.framework.ComparisonFailure: value (table=MEMBER, row=0, col=KANJI_FAMILY_NAME) expected:<電[信柱]> but was:<電[電]>
	at com.github.springtestdbunit.TestExecutionListenerChain.runChain(TestExecutionListenerChain.java:136)
	at com.github.springtestdbunit.TestExecutionListenerChain.backwards(TestExecutionListenerChain.java:120)
	at com.github.springtestdbunit.TestExecutionListenerChain.afterTestMethod(TestExecutionListenerChain.java:100)
	at org.springframework.test.context.TestContextManager.afterTestMethod(TestContextManager.java:313)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:94)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:254)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:89)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:193)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: junit.framework.ComparisonFailure: value (table=MEMBER, row=0, col=KANJI_FAMILY_NAME) expected:<電[信柱]> but was:<電[電]>
	at org.dbunit.assertion.JUnitFailureFactory.createFailure(JUnitFailureFactory.java:39)
	at org.dbunit.assertion.DefaultFailureHandler.createFailure(DefaultFailureHandler.java:97)
	at org.dbunit.assertion.DefaultFailureHandler.handle(DefaultFailureHandler.java:223)
	at org.dbunit.assertion.DbUnitAssert.compareData(DbUnitAssert.java:530)
	at org.dbunit.assertion.DbUnitAssert.assertEquals(DbUnitAssert.java:415)
	at org.dbunit.assertion.DbUnitAssert.assertEquals(DbUnitAssert.java:312)
	at org.dbunit.assertion.DbUnitAssert.assertEquals(DbUnitAssert.java:274)
	at org.dbunit.assertion.DbUnitAssert.assertEqualsIgnoreCols(DbUnitAssert.java:122)
	at org.dbunit.Assertion.assertEqualsIgnoreCols(Assertion.java:74)
	at com.github.springtestdbunit.assertion.NonStrictDatabaseAssertion.assertEquals(NonStrictDatabaseAssertion.java:56)
	at com.github.springtestdbunit.assertion.NonStrictDatabaseAssertion.assertEquals(NonStrictDatabaseAssertion.java:48)
	at com.github.springtestdbunit.DbUnitRunner.verifyExpected(DbUnitRunner.java:154)
	at com.github.springtestdbunit.DbUnitRunner.verifyExpected(DbUnitRunner.java:120)
	at com.github.springtestdbunit.DbUnitRunner.afterTestMethod(DbUnitRunner.java:86)
	at com.github.springtestdbunit.DbUnitTestExecutionListener.afterTestMethod(DbUnitTestExecutionListener.java:190)
	at com.github.springtestdbunit.TestExecutionListenerChain$4.call(TestExecutionListenerChain.java:102)
	at com.github.springtestdbunit.TestExecutionListenerChain.runChain(TestExecutionListenerChain.java:127)
	... 23 common frames omitted
date:2017-09-14 15:19:04	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==>  Preparing: SELECT boarding_class_cd, boarding_class_name, extra_charge FROM boarding_class 
date:2017-09-14 15:19:04	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==> Parameters: 
date:2017-09-14 15:19:04	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
1. SELECT
        boarding_class_cd,
        boarding_class_name,
        extra_charge
    FROM
        boarding_class {executed in 21 msec}
date:2017-09-14 15:19:04	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:<==      Total: 2
date:2017-09-14 15:19:04	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==>  Preparing: SELECT fare_type_cd, fare_type_name, discount_rate, rsrv_available_start_day_num, rsrv_available_end_day_num, passenger_min_num FROM fare_type 
date:2017-09-14 15:19:04	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 15:19:04	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
2. SELECT
        fare_type_cd,
        fare_type_name,
        discount_rate,
        rsrv_available_start_day_num,
        rsrv_available_end_day_num,
        passenger_min_num
    FROM
        fare_type {executed in 2 msec}
date:2017-09-14 15:19:04	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:<==      Total: 10
date:2017-09-14 15:19:04	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==>  Preparing: SELECT fm.flight_name, fm.departure_time, fm.arrival_time, fm.craft_type, r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM flight_master fm, route r, airport a_dep, airport a_arr WHERE fm.route_no = r.route_no AND r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 15:19:04	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==> Parameters: 
date:2017-09-14 15:19:04	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
3. SELECT
        fm.flight_name,
        fm.departure_time,
        fm.arrival_time,
        fm.craft_type,
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        flight_master fm,
        route r,
        airport a_dep,
        airport a_arr
    WHERE 
        fm.route_no = r.route_no
    AND
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 5 msec}
date:2017-09-14 15:19:04	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:<==      Total: 126
date:2017-09-14 15:19:04	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==>  Preparing: SELECT peak_time_cd, peak_start_date, peak_end_date, multiplication_ratio FROM peak_time 
date:2017-09-14 15:19:04	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 15:19:04	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
4. SELECT
        peak_time_cd,
        peak_start_date,
        peak_end_date,
        multiplication_ratio
    FROM
        peak_time {executed in 2 msec}
date:2017-09-14 15:19:04	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:<==      Total: 16
date:2017-09-14 15:19:04	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==>  Preparing: SELECT r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM route r, airport a_dep, airport a_arr WHERE r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 15:19:04	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==> Parameters: 
date:2017-09-14 15:19:04	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
5. SELECT
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        route r,
        airport a_dep,
        airport a_arr
    WHERE
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 3 msec}
date:2017-09-14 15:19:04	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:<==      Total: 20
date:2017-09-14 15:19:04	thread:main	user:	X-Track:	level:WARN 	logger:org.dozer.config.GlobalSettings                 	message:Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member_login {executed in 1 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member {executed in 6 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 3 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 1 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER {executed in 1 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER_LOGIN {executed in 0 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 0 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==>  Preparing: UPDATE member SET kanji_family_name = ?, kanji_given_name = ?, kana_family_name = ?, kana_given_name = ?, birthday = ?, gender = ?, tel = ?, zip_code = ?, address = ?, mail = ?, credit_no = ?, credit_type_cd = ?, credit_term = ? WHERE customer_no = ? 
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==> Parameters: 電信柱(String), 花子(String), デンデン(String), ハナコ(String), 1979-01-25 00:00:00.0(Timestamp), F(String), 111-1111-1111(String), 1111111(String), 東京都港区港南Ｘ－Ｘ－Ｘ(String), xxxxxx@ntt.co.jp(String), 1111111111111111(String), VIS(String), 01/20(String), 0000000001(String)
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
6. UPDATE member SET
        kanji_family_name = '電信柱',
        kanji_given_name = '花子',
        kana_family_name = 'デンデン',
        kana_given_name = 'ハナコ',
        birthday = '01/25/1979 00:00:00.000',
        gender = 'F',
        tel = '111-1111-1111',
        zip_code = '1111111',
        address = '東京都港区港南Ｘ－Ｘ－Ｘ',
        mail = 'xxxxxx@ntt.co.jp',
        credit_no = '1111111111111111',
        credit_type_cd = 'VIS',
        credit_term = '01/20'
    WHERE
        customer_no = '0000000001' {executed in 1 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:<==    Updates: 1
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 0 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.AbstractResultSetTable.<init>(AbstractResultSetTable.java:110)
6. select customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term from member order by customer_no {executed in 1 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.AbstractResultSetTable.<init>(AbstractResultSetTable.java:110)
6. select customer_no, password, last_password, login_date_time, login_flg from member_login order by customer_no {executed in 0 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
7. delete from member_login {executed in 1 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
7. delete from member {executed in 2 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
7. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 1 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
7. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 1 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
7. SELECT * FROM MEMBER {executed in 1 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
7. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
7. SELECT * FROM MEMBER_LOGIN {executed in 0 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.findOne     	message:==>  Preparing: SELECT m.customer_no, m.kanji_family_name, m.kanji_given_name, m.kana_family_name, m.kana_given_name, m.birthday, m.gender, m.tel, m.zip_code, m.address, m.mail, m.credit_no, m.credit_term, m_l.password, m_l.last_password, m_l.login_date_time, m_l.login_flg, c_t.credit_type_cd, c_t.credit_firm FROM member m, member_login m_l, credit_type c_t WHERE m.customer_no = ? AND m.customer_no = m_l.customer_no AND m.credit_type_cd = c_t.credit_type_cd 
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.findOne     	message:==> Parameters: 0000000001(String)
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
7. SELECT
        m.customer_no,
        m.kanji_family_name,
        m.kanji_given_name,
        m.kana_family_name,
        m.kana_given_name,
        m.birthday,
        m.gender,
        m.tel,
        m.zip_code,
        m.address,
        m.mail,
        m.credit_no,
        m.credit_term,
        m_l.password,
        m_l.last_password,
        m_l.login_date_time,
        m_l.login_flg,
        c_t.credit_type_cd,
        c_t.credit_firm
    FROM
        member m,
        member_login m_l,
        credit_type c_t
    WHERE
        m.customer_no = '0000000001'
    AND
        m.customer_no = m_l.customer_no
    AND
        m.credit_type_cd = c_t.credit_type_cd {executed in 1 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.findOne     	message:<==      Total: 1
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
7. SELECT * FROM member WHERE customer_no='0000000001' {executed in 2 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
7. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.AbstractResultSetTable.<init>(AbstractResultSetTable.java:110)
7. select customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term from member order by customer_no {executed in 1 msec}
date:2017-09-14 15:19:05	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.AbstractResultSetTable.<init>(AbstractResultSetTable.java:110)
7. select customer_no, password, last_password, login_date_time, login_flg from member_login order by customer_no {executed in 0 msec}
date:2017-09-14 15:22:00	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==>  Preparing: SELECT boarding_class_cd, boarding_class_name, extra_charge FROM boarding_class 
date:2017-09-14 15:22:00	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==> Parameters: 
date:2017-09-14 15:22:00	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
1. SELECT
        boarding_class_cd,
        boarding_class_name,
        extra_charge
    FROM
        boarding_class {executed in 21 msec}
date:2017-09-14 15:22:00	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:<==      Total: 2
date:2017-09-14 15:22:01	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==>  Preparing: SELECT fare_type_cd, fare_type_name, discount_rate, rsrv_available_start_day_num, rsrv_available_end_day_num, passenger_min_num FROM fare_type 
date:2017-09-14 15:22:01	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 15:22:01	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
2. SELECT
        fare_type_cd,
        fare_type_name,
        discount_rate,
        rsrv_available_start_day_num,
        rsrv_available_end_day_num,
        passenger_min_num
    FROM
        fare_type {executed in 2 msec}
date:2017-09-14 15:22:01	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:<==      Total: 10
date:2017-09-14 15:22:01	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==>  Preparing: SELECT fm.flight_name, fm.departure_time, fm.arrival_time, fm.craft_type, r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM flight_master fm, route r, airport a_dep, airport a_arr WHERE fm.route_no = r.route_no AND r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 15:22:01	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==> Parameters: 
date:2017-09-14 15:22:01	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
3. SELECT
        fm.flight_name,
        fm.departure_time,
        fm.arrival_time,
        fm.craft_type,
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        flight_master fm,
        route r,
        airport a_dep,
        airport a_arr
    WHERE 
        fm.route_no = r.route_no
    AND
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 4 msec}
date:2017-09-14 15:22:01	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:<==      Total: 126
date:2017-09-14 15:22:01	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==>  Preparing: SELECT peak_time_cd, peak_start_date, peak_end_date, multiplication_ratio FROM peak_time 
date:2017-09-14 15:22:01	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 15:22:01	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
4. SELECT
        peak_time_cd,
        peak_start_date,
        peak_end_date,
        multiplication_ratio
    FROM
        peak_time {executed in 1 msec}
date:2017-09-14 15:22:01	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:<==      Total: 16
date:2017-09-14 15:22:01	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==>  Preparing: SELECT r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM route r, airport a_dep, airport a_arr WHERE r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 15:22:01	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==> Parameters: 
date:2017-09-14 15:22:01	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
5. SELECT
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        route r,
        airport a_dep,
        airport a_arr
    WHERE
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 1 msec}
date:2017-09-14 15:22:01	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:<==      Total: 20
date:2017-09-14 15:22:01	thread:main	user:	X-Track:	level:WARN 	logger:org.dozer.config.GlobalSettings                 	message:Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member_login {executed in 1 msec}
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member {executed in 11 msec}
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 4 msec}
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 2 msec}
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER {executed in 1 msec}
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER_LOGIN {executed in 1 msec}
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 0 msec}
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==>  Preparing: UPDATE member SET kanji_family_name = ?, kanji_given_name = ?, kana_family_name = ?, kana_given_name = ?, birthday = ?, gender = ?, tel = ?, zip_code = ?, address = ?, mail = ?, credit_no = ?, credit_type_cd = ?, credit_term = ? WHERE customer_no = ? 
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==> Parameters: 電信柱(String), 花子(String), デンデン(String), ハナコ(String), 1979-01-25 00:00:00.0(Timestamp), F(String), 111-1111-1111(String), 1111111(String), 東京都港区港南Ｘ－Ｘ－Ｘ(String), xxxxxx@ntt.co.jp(String), 1111111111111111(String), VIS(String), 01/20(String), 0000000001(String)
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
6. UPDATE member SET
        kanji_family_name = '電信柱',
        kanji_given_name = '花子',
        kana_family_name = 'デンデン',
        kana_given_name = 'ハナコ',
        birthday = '01/25/1979 00:00:00.000',
        gender = 'F',
        tel = '111-1111-1111',
        zip_code = '1111111',
        address = '東京都港区港南Ｘ－Ｘ－Ｘ',
        mail = 'xxxxxx@ntt.co.jp',
        credit_no = '1111111111111111',
        credit_type_cd = 'VIS',
        credit_term = '01/20'
    WHERE
        customer_no = '0000000001' {executed in 2 msec}
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:<==    Updates: 1
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 1 msec}
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.AbstractResultSetTable.<init>(AbstractResultSetTable.java:110)
6. select customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term from member order by customer_no {executed in 2 msec}
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.AbstractResultSetTable.<init>(AbstractResultSetTable.java:110)
6. select customer_no, password, last_password, login_date_time, login_flg from member_login order by customer_no {executed in 1 msec}
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
7. delete from member_login {executed in 0 msec}
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
7. delete from member {executed in 1 msec}
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
7. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 2 msec}
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
7. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 1 msec}
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
7. SELECT * FROM MEMBER {executed in 1 msec}
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
7. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
7. SELECT * FROM MEMBER_LOGIN {executed in 0 msec}
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.findOne     	message:==>  Preparing: SELECT m.customer_no, m.kanji_family_name, m.kanji_given_name, m.kana_family_name, m.kana_given_name, m.birthday, m.gender, m.tel, m.zip_code, m.address, m.mail, m.credit_no, m.credit_term, m_l.password, m_l.last_password, m_l.login_date_time, m_l.login_flg, c_t.credit_type_cd, c_t.credit_firm FROM member m, member_login m_l, credit_type c_t WHERE m.customer_no = ? AND m.customer_no = m_l.customer_no AND m.credit_type_cd = c_t.credit_type_cd 
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.findOne     	message:==> Parameters: 0000000001(String)
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
7. SELECT
        m.customer_no,
        m.kanji_family_name,
        m.kanji_given_name,
        m.kana_family_name,
        m.kana_given_name,
        m.birthday,
        m.gender,
        m.tel,
        m.zip_code,
        m.address,
        m.mail,
        m.credit_no,
        m.credit_term,
        m_l.password,
        m_l.last_password,
        m_l.login_date_time,
        m_l.login_flg,
        c_t.credit_type_cd,
        c_t.credit_firm
    FROM
        member m,
        member_login m_l,
        credit_type c_t
    WHERE
        m.customer_no = '0000000001'
    AND
        m.customer_no = m_l.customer_no
    AND
        m.credit_type_cd = c_t.credit_type_cd {executed in 2 msec}
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.findOne     	message:<==      Total: 1
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
7. SELECT * FROM member WHERE customer_no='0000000001' {executed in 1 msec}
date:2017-09-14 15:22:02	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
7. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:23:37	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==>  Preparing: SELECT boarding_class_cd, boarding_class_name, extra_charge FROM boarding_class 
date:2017-09-14 15:23:37	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==> Parameters: 
date:2017-09-14 15:23:37	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
1. SELECT
        boarding_class_cd,
        boarding_class_name,
        extra_charge
    FROM
        boarding_class {executed in 24 msec}
date:2017-09-14 15:23:37	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:<==      Total: 2
date:2017-09-14 15:23:37	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==>  Preparing: SELECT fare_type_cd, fare_type_name, discount_rate, rsrv_available_start_day_num, rsrv_available_end_day_num, passenger_min_num FROM fare_type 
date:2017-09-14 15:23:37	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 15:23:37	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
2. SELECT
        fare_type_cd,
        fare_type_name,
        discount_rate,
        rsrv_available_start_day_num,
        rsrv_available_end_day_num,
        passenger_min_num
    FROM
        fare_type {executed in 2 msec}
date:2017-09-14 15:23:37	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:<==      Total: 10
date:2017-09-14 15:23:37	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==>  Preparing: SELECT fm.flight_name, fm.departure_time, fm.arrival_time, fm.craft_type, r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM flight_master fm, route r, airport a_dep, airport a_arr WHERE fm.route_no = r.route_no AND r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 15:23:37	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==> Parameters: 
date:2017-09-14 15:23:37	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
3. SELECT
        fm.flight_name,
        fm.departure_time,
        fm.arrival_time,
        fm.craft_type,
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        flight_master fm,
        route r,
        airport a_dep,
        airport a_arr
    WHERE 
        fm.route_no = r.route_no
    AND
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 5 msec}
date:2017-09-14 15:23:37	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:<==      Total: 126
date:2017-09-14 15:23:37	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==>  Preparing: SELECT peak_time_cd, peak_start_date, peak_end_date, multiplication_ratio FROM peak_time 
date:2017-09-14 15:23:37	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 15:23:37	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
4. SELECT
        peak_time_cd,
        peak_start_date,
        peak_end_date,
        multiplication_ratio
    FROM
        peak_time {executed in 1 msec}
date:2017-09-14 15:23:37	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:<==      Total: 16
date:2017-09-14 15:23:37	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==>  Preparing: SELECT r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM route r, airport a_dep, airport a_arr WHERE r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 15:23:37	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==> Parameters: 
date:2017-09-14 15:23:37	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
5. SELECT
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        route r,
        airport a_dep,
        airport a_arr
    WHERE
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 2 msec}
date:2017-09-14 15:23:37	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:<==      Total: 20
date:2017-09-14 15:23:37	thread:main	user:	X-Track:	level:WARN 	logger:org.dozer.config.GlobalSettings                 	message:Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member_login {executed in 1 msec}
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member {executed in 9 msec}
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 3 msec}
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 2 msec}
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER {executed in 1 msec}
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 0 msec}
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER_LOGIN {executed in 6 msec}
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 1 msec}
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==>  Preparing: UPDATE member SET kanji_family_name = ?, kanji_given_name = ?, kana_family_name = ?, kana_given_name = ?, birthday = ?, gender = ?, tel = ?, zip_code = ?, address = ?, mail = ?, credit_no = ?, credit_type_cd = ?, credit_term = ? WHERE customer_no = ? 
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==> Parameters: 電信柱(String), 花子(String), デンデン(String), ハナコ(String), 1979-01-25 00:00:00.0(Timestamp), F(String), 111-1111-1111(String), 1111111(String), 東京都港区港南Ｘ－Ｘ－Ｘ(String), xxxxxx@ntt.co.jp(String), 1111111111111111(String), VIS(String), 01/20(String), 0000000001(String)
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
6. UPDATE member SET
        kanji_family_name = '電信柱',
        kanji_given_name = '花子',
        kana_family_name = 'デンデン',
        kana_given_name = 'ハナコ',
        birthday = '01/25/1979 00:00:00.000',
        gender = 'F',
        tel = '111-1111-1111',
        zip_code = '1111111',
        address = '東京都港区港南Ｘ－Ｘ－Ｘ',
        mail = 'xxxxxx@ntt.co.jp',
        credit_no = '1111111111111111',
        credit_type_cd = 'VIS',
        credit_term = '01/20'
    WHERE
        customer_no = '0000000001' {executed in 2 msec}
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:<==    Updates: 1
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 1 msec}
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
7. delete from member_login {executed in 0 msec}
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
7. delete from member {executed in 1 msec}
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
7. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 1 msec}
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
7. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 1 msec}
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
7. SELECT * FROM MEMBER {executed in 1 msec}
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
7. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 0 msec}
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
7. SELECT * FROM MEMBER_LOGIN {executed in 1 msec}
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.findOne     	message:==>  Preparing: SELECT m.customer_no, m.kanji_family_name, m.kanji_given_name, m.kana_family_name, m.kana_given_name, m.birthday, m.gender, m.tel, m.zip_code, m.address, m.mail, m.credit_no, m.credit_term, m_l.password, m_l.last_password, m_l.login_date_time, m_l.login_flg, c_t.credit_type_cd, c_t.credit_firm FROM member m, member_login m_l, credit_type c_t WHERE m.customer_no = ? AND m.customer_no = m_l.customer_no AND m.credit_type_cd = c_t.credit_type_cd 
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.findOne     	message:==> Parameters: 0000000001(String)
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
7. SELECT
        m.customer_no,
        m.kanji_family_name,
        m.kanji_given_name,
        m.kana_family_name,
        m.kana_given_name,
        m.birthday,
        m.gender,
        m.tel,
        m.zip_code,
        m.address,
        m.mail,
        m.credit_no,
        m.credit_term,
        m_l.password,
        m_l.last_password,
        m_l.login_date_time,
        m_l.login_flg,
        c_t.credit_type_cd,
        c_t.credit_firm
    FROM
        member m,
        member_login m_l,
        credit_type c_t
    WHERE
        m.customer_no = '0000000001'
    AND
        m.customer_no = m_l.customer_no
    AND
        m.credit_type_cd = c_t.credit_type_cd {executed in 1 msec}
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.findOne     	message:<==      Total: 1
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
7. SELECT * FROM member WHERE customer_no='0000000001' {executed in 0 msec}
date:2017-09-14 15:23:38	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
7. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:24:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==>  Preparing: SELECT boarding_class_cd, boarding_class_name, extra_charge FROM boarding_class 
date:2017-09-14 15:24:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==> Parameters: 
date:2017-09-14 15:24:40	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
1. SELECT
        boarding_class_cd,
        boarding_class_name,
        extra_charge
    FROM
        boarding_class {executed in 18 msec}
date:2017-09-14 15:24:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:<==      Total: 2
date:2017-09-14 15:24:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==>  Preparing: SELECT fare_type_cd, fare_type_name, discount_rate, rsrv_available_start_day_num, rsrv_available_end_day_num, passenger_min_num FROM fare_type 
date:2017-09-14 15:24:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 15:24:40	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
2. SELECT
        fare_type_cd,
        fare_type_name,
        discount_rate,
        rsrv_available_start_day_num,
        rsrv_available_end_day_num,
        passenger_min_num
    FROM
        fare_type {executed in 2 msec}
date:2017-09-14 15:24:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:<==      Total: 10
date:2017-09-14 15:24:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==>  Preparing: SELECT fm.flight_name, fm.departure_time, fm.arrival_time, fm.craft_type, r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM flight_master fm, route r, airport a_dep, airport a_arr WHERE fm.route_no = r.route_no AND r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 15:24:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==> Parameters: 
date:2017-09-14 15:24:40	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
3. SELECT
        fm.flight_name,
        fm.departure_time,
        fm.arrival_time,
        fm.craft_type,
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        flight_master fm,
        route r,
        airport a_dep,
        airport a_arr
    WHERE 
        fm.route_no = r.route_no
    AND
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 5 msec}
date:2017-09-14 15:24:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:<==      Total: 126
date:2017-09-14 15:24:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==>  Preparing: SELECT peak_time_cd, peak_start_date, peak_end_date, multiplication_ratio FROM peak_time 
date:2017-09-14 15:24:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 15:24:40	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
4. SELECT
        peak_time_cd,
        peak_start_date,
        peak_end_date,
        multiplication_ratio
    FROM
        peak_time {executed in 2 msec}
date:2017-09-14 15:24:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:<==      Total: 16
date:2017-09-14 15:24:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==>  Preparing: SELECT r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM route r, airport a_dep, airport a_arr WHERE r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 15:24:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==> Parameters: 
date:2017-09-14 15:24:40	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
5. SELECT
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        route r,
        airport a_dep,
        airport a_arr
    WHERE
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 2 msec}
date:2017-09-14 15:24:40	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:<==      Total: 20
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:WARN 	logger:org.dozer.config.GlobalSettings                 	message:Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member_login {executed in 1 msec}
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member {executed in 5 msec}
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 3 msec}
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 1 msec}
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER {executed in 1 msec}
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER_LOGIN {executed in 1 msec}
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 1 msec}
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 0 msec}
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==>  Preparing: UPDATE member SET kanji_family_name = ?, kanji_given_name = ?, kana_family_name = ?, kana_given_name = ?, birthday = ?, gender = ?, tel = ?, zip_code = ?, address = ?, mail = ?, credit_no = ?, credit_type_cd = ?, credit_term = ? WHERE customer_no = ? 
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==> Parameters: 電信柱(String), 花子(String), デンデン(String), ハナコ(String), 1979-01-25 00:00:00.0(Timestamp), F(String), 111-1111-1111(String), 1111111(String), 東京都港区港南Ｘ－Ｘ－Ｘ(String), xxxxxx@ntt.co.jp(String), 1111111111111111(String), VIS(String), 01/20(String), 0000000001(String)
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
6. UPDATE member SET
        kanji_family_name = '電信柱',
        kanji_given_name = '花子',
        kana_family_name = 'デンデン',
        kana_given_name = 'ハナコ',
        birthday = '01/25/1979 00:00:00.000',
        gender = 'F',
        tel = '111-1111-1111',
        zip_code = '1111111',
        address = '東京都港区港南Ｘ－Ｘ－Ｘ',
        mail = 'xxxxxx@ntt.co.jp',
        credit_no = '1111111111111111',
        credit_type_cd = 'VIS',
        credit_term = '01/20'
    WHERE
        customer_no = '0000000001' {executed in 1 msec}
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:<==    Updates: 1
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 1 msec}
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 0 msec}
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
7. delete from member_login {executed in 1 msec}
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
7. delete from member {executed in 1 msec}
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
7. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 1 msec}
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
7. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 0 msec}
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
7. SELECT * FROM MEMBER {executed in 1 msec}
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
7. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 0 msec}
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
7. SELECT * FROM MEMBER_LOGIN {executed in 0 msec}
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.findOne     	message:==>  Preparing: SELECT m.customer_no, m.kanji_family_name, m.kanji_given_name, m.kana_family_name, m.kana_given_name, m.birthday, m.gender, m.tel, m.zip_code, m.address, m.mail, m.credit_no, m.credit_term, m_l.password, m_l.last_password, m_l.login_date_time, m_l.login_flg, c_t.credit_type_cd, c_t.credit_firm FROM member m, member_login m_l, credit_type c_t WHERE m.customer_no = ? AND m.customer_no = m_l.customer_no AND m.credit_type_cd = c_t.credit_type_cd 
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.findOne     	message:==> Parameters: 0000000001(String)
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
7. SELECT
        m.customer_no,
        m.kanji_family_name,
        m.kanji_given_name,
        m.kana_family_name,
        m.kana_given_name,
        m.birthday,
        m.gender,
        m.tel,
        m.zip_code,
        m.address,
        m.mail,
        m.credit_no,
        m.credit_term,
        m_l.password,
        m_l.last_password,
        m_l.login_date_time,
        m_l.login_flg,
        c_t.credit_type_cd,
        c_t.credit_firm
    FROM
        member m,
        member_login m_l,
        credit_type c_t
    WHERE
        m.customer_no = '0000000001'
    AND
        m.customer_no = m_l.customer_no
    AND
        m.credit_type_cd = c_t.credit_type_cd {executed in 2 msec}
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.findOne     	message:<==      Total: 1
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
7. SELECT * FROM member WHERE customer_no='0000000001' {executed in 1 msec}
date:2017-09-14 15:24:41	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
7. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:27:12	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==>  Preparing: SELECT boarding_class_cd, boarding_class_name, extra_charge FROM boarding_class 
date:2017-09-14 15:27:12	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:==> Parameters: 
date:2017-09-14 15:27:12	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
1. SELECT
        boarding_class_cd,
        boarding_class_name,
        extra_charge
    FROM
        boarding_class {executed in 20 msec}
date:2017-09-14 15:27:12	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.b.BoardingClassRepository.findAll   	message:<==      Total: 2
date:2017-09-14 15:27:12	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==>  Preparing: SELECT fare_type_cd, fare_type_name, discount_rate, rsrv_available_start_day_num, rsrv_available_end_day_num, passenger_min_num FROM fare_type 
date:2017-09-14 15:27:12	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 15:27:12	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
2. SELECT
        fare_type_cd,
        fare_type_name,
        discount_rate,
        rsrv_available_start_day_num,
        rsrv_available_end_day_num,
        passenger_min_num
    FROM
        fare_type {executed in 2 msec}
date:2017-09-14 15:27:12	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.faretype.FareTypeRepository.findAll 	message:<==      Total: 10
date:2017-09-14 15:27:12	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==>  Preparing: SELECT fm.flight_name, fm.departure_time, fm.arrival_time, fm.craft_type, r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM flight_master fm, route r, airport a_dep, airport a_arr WHERE fm.route_no = r.route_no AND r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 15:27:12	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:==> Parameters: 
date:2017-09-14 15:27:12	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
3. SELECT
        fm.flight_name,
        fm.departure_time,
        fm.arrival_time,
        fm.craft_type,
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        flight_master fm,
        route r,
        airport a_dep,
        airport a_arr
    WHERE 
        fm.route_no = r.route_no
    AND
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 6 msec}
date:2017-09-14 15:27:12	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.f.F.findAllFlightMaster             	message:<==      Total: 126
date:2017-09-14 15:27:12	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==>  Preparing: SELECT peak_time_cd, peak_start_date, peak_end_date, multiplication_ratio FROM peak_time 
date:2017-09-14 15:27:12	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:==> Parameters: 
date:2017-09-14 15:27:12	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
4. SELECT
        peak_time_cd,
        peak_start_date,
        peak_end_date,
        multiplication_ratio
    FROM
        peak_time {executed in 1 msec}
date:2017-09-14 15:27:12	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.peaktime.PeakTimeRepository.findAll 	message:<==      Total: 16
date:2017-09-14 15:27:12	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==>  Preparing: SELECT r.route_no, r.basic_fare, a_dep.airport_cd AS dep_airport_cd, a_dep.airport_name AS dep_airport_name, a_arr.airport_cd AS aar_airport_cd, a_arr.airport_name AS aar_airport_name FROM route r, airport a_dep, airport a_arr WHERE r.dep_airport_cd = a_dep.airport_cd AND r.arr_airport_cd = a_arr.airport_cd 
date:2017-09-14 15:27:12	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:==> Parameters: 
date:2017-09-14 15:27:12	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
5. SELECT
        r.route_no,
        r.basic_fare,
        a_dep.airport_cd AS dep_airport_cd,
        a_dep.airport_name AS dep_airport_name,
        a_arr.airport_cd AS aar_airport_cd,
        a_arr.airport_name AS aar_airport_name
    FROM
        route r,
        airport a_dep,
        airport a_arr
    WHERE
        r.dep_airport_cd = a_dep.airport_cd
    AND
        r.arr_airport_cd = a_arr.airport_cd {executed in 2 msec}
date:2017-09-14 15:27:12	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.route.RouteRepository.findAll       	message:<==      Total: 20
date:2017-09-14 15:27:12	thread:main	user:	X-Track:	level:WARN 	logger:org.dozer.config.GlobalSettings                 	message:Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member_login {executed in 1 msec}
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
6. delete from member {executed in 9 msec}
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 5 msec}
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
6. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 1 msec}
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER {executed in 1 msec}
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 11 msec}
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
6. SELECT * FROM MEMBER_LOGIN {executed in 1 msec}
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 1 msec}
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 3 msec}
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==>  Preparing: UPDATE member SET kanji_family_name = ?, kanji_given_name = ?, kana_family_name = ?, kana_given_name = ?, birthday = ?, gender = ?, tel = ?, zip_code = ?, address = ?, mail = ?, credit_no = ?, credit_type_cd = ?, credit_term = ? WHERE customer_no = ? 
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:==> Parameters: 電信柱(String), 花子(String), デンデン(String), ハナコ(String), 1979-01-25 00:00:00.0(Timestamp), F(String), 111-1111-1111(String), 1111111(String), 東京都港区港南Ｘ－Ｘ－Ｘ(String), xxxxxx@ntt.co.jp(String), 1111111111111111(String), VIS(String), 01/20(String), 0000000001(String)
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
6. UPDATE member SET
        kanji_family_name = '電信柱',
        kanji_given_name = '花子',
        kana_family_name = 'デンデン',
        kana_given_name = 'ハナコ',
        birthday = '01/25/1979 00:00:00.000',
        gender = 'F',
        tel = '111-1111-1111',
        zip_code = '1111111',
        address = '東京都港区港南Ｘ－Ｘ－Ｘ',
        mail = 'xxxxxx@ntt.co.jp',
        credit_no = '1111111111111111',
        credit_type_cd = 'VIS',
        credit_term = '01/20'
    WHERE
        customer_no = '0000000001' {executed in 2 msec}
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.update      	message:<==    Updates: 1
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM member WHERE customer_no='0000000001' {executed in 1 msec}
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
6. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.AbstractResultSetTable.<init>(AbstractResultSetTable.java:110)
6. select customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term from member order by customer_no {executed in 2 msec}
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.AbstractResultSetTable.<init>(AbstractResultSetTable.java:110)
6. select customer_no, password, last_password, login_date_time, login_flg from member_login order by customer_no {executed in 1 msec}
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
7. delete from member_login {executed in 1 msec}
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
7. delete from member {executed in 1 msec}
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
7. insert into member (customer_no, kanji_family_name, kanji_given_name, kana_family_name, kana_given_name, birthday, gender, tel, zip_code, address, mail, credit_no, credit_type_cd, credit_term) values ('0000000001', '電電', '花子', 'デンデン', 'ハナコ', '01/25/1979 00:00:00.000', 'F', '111-1111-1111', '1111111', '東京都港区港南Ｘ－Ｘ－Ｘ', 'xxxxxx@ntt.co.jp', '1111111111111111', 'VIS', '01/20') {executed in 1 msec}
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:WARN 	logger:org.dbunit.dataset.AbstractTableMetaData        	message:Potential problem found: The configured data type factory 'class org.dbunit.dataset.datatype.DefaultDataTypeFactory' might cause problems with the current database 'PostgreSQL' (e.g. some datatypes may not be supported properly). In rare cases you might see this message because the list of supported database products is incomplete (list=[derby]). If so please request a java-class update via the forums.If you are using your own IDataTypeFactory extending DefaultDataTypeFactory, ensure that you override getValidDbProducts() to specify the supported database products.
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:85)
7. insert into member_login (customer_no, password, last_password, login_date_time, login_flg) values ('0000000001', '$2a$10$AUvby7NA4i5MpFbks.lYd.pgUCv7Ze32FdnQFE03N4EeEePqVAH0C', '$2a$10$bJ8HB/5LaMN/ntOQHpgiAu8tfG1Y/rP21MaoK4RBenghxcbhrLW5C', '09/13/2017 16:47:04.283', 0) {executed in 2 msec}
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
7. SELECT * FROM MEMBER {executed in 2 msec}
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
7. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:454)
7. SELECT * FROM MEMBER_LOGIN {executed in 1 msec}
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.findOne     	message:==>  Preparing: SELECT m.customer_no, m.kanji_family_name, m.kanji_given_name, m.kana_family_name, m.kana_given_name, m.birthday, m.gender, m.tel, m.zip_code, m.address, m.mail, m.credit_no, m.credit_term, m_l.password, m_l.last_password, m_l.login_date_time, m_l.login_flg, c_t.credit_type_cd, c_t.credit_firm FROM member m, member_login m_l, credit_type c_t WHERE m.customer_no = ? AND m.customer_no = m_l.customer_no AND m.credit_type_cd = c_t.credit_type_cd 
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.findOne     	message:==> Parameters: 0000000001(String)
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)
7. SELECT
        m.customer_no,
        m.kanji_family_name,
        m.kanji_given_name,
        m.kana_family_name,
        m.kana_given_name,
        m.birthday,
        m.gender,
        m.tel,
        m.zip_code,
        m.address,
        m.mail,
        m.credit_no,
        m.credit_term,
        m_l.password,
        m_l.last_password,
        m_l.login_date_time,
        m_l.login_flg,
        c_t.credit_type_cd,
        c_t.credit_firm
    FROM
        member m,
        member_login m_l,
        credit_type c_t
    WHERE
        m.customer_no = '0000000001'
    AND
        m.customer_no = m_l.customer_no
    AND
        m.credit_type_cd = c_t.credit_type_cd {executed in 1 msec}
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:j.c.n.a.d.r.member.MemberRepository.findOne     	message:<==      Total: 1
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
7. SELECT * FROM member WHERE customer_no='0000000001' {executed in 1 msec}
date:2017-09-14 15:27:13	thread:main	user:	X-Track:	level:DEBUG	logger:jdbc.sqltiming                                  	message: org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:688)
7. SELECT * FROM credit_type WHERE credit_type_cd='VIS' {executed in 1 msec}
